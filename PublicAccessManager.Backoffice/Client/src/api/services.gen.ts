// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, formDataBodySerializer } from '@hey-api/client-fetch';
import type { GetCultureData, GetCultureError, GetCultureResponse, PostDataTypeData, PostDataTypeError, PostDataTypeResponse, GetDataTypeByIdData, GetDataTypeByIdError, GetDataTypeByIdResponse, DeleteDataTypeByIdData, DeleteDataTypeByIdError, DeleteDataTypeByIdResponse, PutDataTypeByIdData, PutDataTypeByIdError, PutDataTypeByIdResponse, PostDataTypeByIdCopyData, PostDataTypeByIdCopyError, PostDataTypeByIdCopyResponse, GetDataTypeByIdIsUsedData, GetDataTypeByIdIsUsedError, GetDataTypeByIdIsUsedResponse, PutDataTypeByIdMoveData, PutDataTypeByIdMoveError, PutDataTypeByIdMoveResponse, GetDataTypeByIdReferencesData, GetDataTypeByIdReferencesError, GetDataTypeByIdReferencesResponse, GetDataTypeConfigurationError, GetDataTypeConfigurationResponse, PostDataTypeFolderData, PostDataTypeFolderError, PostDataTypeFolderResponse, GetDataTypeFolderByIdData, GetDataTypeFolderByIdError, GetDataTypeFolderByIdResponse, DeleteDataTypeFolderByIdData, DeleteDataTypeFolderByIdError, DeleteDataTypeFolderByIdResponse, PutDataTypeFolderByIdData, PutDataTypeFolderByIdError, PutDataTypeFolderByIdResponse, GetFilterDataTypeData, GetFilterDataTypeError, GetFilterDataTypeResponse, GetItemDataTypeData, GetItemDataTypeError, GetItemDataTypeResponse, GetItemDataTypeSearchData, GetItemDataTypeSearchError, GetItemDataTypeSearchResponse, GetTreeDataTypeAncestorsData, GetTreeDataTypeAncestorsError, GetTreeDataTypeAncestorsResponse, GetTreeDataTypeChildrenData, GetTreeDataTypeChildrenError, GetTreeDataTypeChildrenResponse, GetTreeDataTypeRootData, GetTreeDataTypeRootError, GetTreeDataTypeRootResponse, GetDictionaryData, GetDictionaryError, GetDictionaryResponse, PostDictionaryData, PostDictionaryError, PostDictionaryResponse, GetDictionaryByIdData, GetDictionaryByIdError, GetDictionaryByIdResponse, DeleteDictionaryByIdData, DeleteDictionaryByIdError, DeleteDictionaryByIdResponse, PutDictionaryByIdData, PutDictionaryByIdError, PutDictionaryByIdResponse, GetDictionaryByIdExportData, GetDictionaryByIdExportError, GetDictionaryByIdExportResponse, PutDictionaryByIdMoveData, PutDictionaryByIdMoveError, PutDictionaryByIdMoveResponse, PostDictionaryImportData, PostDictionaryImportError, PostDictionaryImportResponse, GetItemDictionaryData, GetItemDictionaryError, GetItemDictionaryResponse, GetTreeDictionaryAncestorsData, GetTreeDictionaryAncestorsError, GetTreeDictionaryAncestorsResponse, GetTreeDictionaryChildrenData, GetTreeDictionaryChildrenError, GetTreeDictionaryChildrenResponse, GetTreeDictionaryRootData, GetTreeDictionaryRootError, GetTreeDictionaryRootResponse, PostDocumentBlueprintData, PostDocumentBlueprintError, PostDocumentBlueprintResponse, GetDocumentBlueprintByIdData, GetDocumentBlueprintByIdError, GetDocumentBlueprintByIdResponse, DeleteDocumentBlueprintByIdData, DeleteDocumentBlueprintByIdError, DeleteDocumentBlueprintByIdResponse, PutDocumentBlueprintByIdData, PutDocumentBlueprintByIdError, PutDocumentBlueprintByIdResponse, PutDocumentBlueprintByIdMoveData, PutDocumentBlueprintByIdMoveError, PutDocumentBlueprintByIdMoveResponse, PostDocumentBlueprintFolderData, PostDocumentBlueprintFolderError, PostDocumentBlueprintFolderResponse, GetDocumentBlueprintFolderByIdData, GetDocumentBlueprintFolderByIdError, GetDocumentBlueprintFolderByIdResponse, DeleteDocumentBlueprintFolderByIdData, DeleteDocumentBlueprintFolderByIdError, DeleteDocumentBlueprintFolderByIdResponse, PutDocumentBlueprintFolderByIdData, PutDocumentBlueprintFolderByIdError, PutDocumentBlueprintFolderByIdResponse, PostDocumentBlueprintFromDocumentData, PostDocumentBlueprintFromDocumentError, PostDocumentBlueprintFromDocumentResponse, GetItemDocumentBlueprintData, GetItemDocumentBlueprintError, GetItemDocumentBlueprintResponse, GetTreeDocumentBlueprintAncestorsData, GetTreeDocumentBlueprintAncestorsError, GetTreeDocumentBlueprintAncestorsResponse, GetTreeDocumentBlueprintChildrenData, GetTreeDocumentBlueprintChildrenError, GetTreeDocumentBlueprintChildrenResponse, GetTreeDocumentBlueprintRootData, GetTreeDocumentBlueprintRootError, GetTreeDocumentBlueprintRootResponse, PostDocumentTypeData, PostDocumentTypeError, PostDocumentTypeResponse, GetDocumentTypeByIdData, GetDocumentTypeByIdError, GetDocumentTypeByIdResponse, DeleteDocumentTypeByIdData, DeleteDocumentTypeByIdError, DeleteDocumentTypeByIdResponse, PutDocumentTypeByIdData, PutDocumentTypeByIdError, PutDocumentTypeByIdResponse, GetDocumentTypeByIdAllowedChildrenData, GetDocumentTypeByIdAllowedChildrenError, GetDocumentTypeByIdAllowedChildrenResponse, GetDocumentTypeByIdBlueprintData, GetDocumentTypeByIdBlueprintError, GetDocumentTypeByIdBlueprintResponse, GetDocumentTypeByIdCompositionReferencesData, GetDocumentTypeByIdCompositionReferencesError, GetDocumentTypeByIdCompositionReferencesResponse, PostDocumentTypeByIdCopyData, PostDocumentTypeByIdCopyError, PostDocumentTypeByIdCopyResponse, GetDocumentTypeByIdExportData, GetDocumentTypeByIdExportError, GetDocumentTypeByIdExportResponse, PutDocumentTypeByIdImportData, PutDocumentTypeByIdImportError, PutDocumentTypeByIdImportResponse, PutDocumentTypeByIdMoveData, PutDocumentTypeByIdMoveError, PutDocumentTypeByIdMoveResponse, GetDocumentTypeAllowedAtRootData, GetDocumentTypeAllowedAtRootError, GetDocumentTypeAllowedAtRootResponse, PostDocumentTypeAvailableCompositionsData, PostDocumentTypeAvailableCompositionsError, PostDocumentTypeAvailableCompositionsResponse, GetDocumentTypeConfigurationError, GetDocumentTypeConfigurationResponse, PostDocumentTypeFolderData, PostDocumentTypeFolderError, PostDocumentTypeFolderResponse, GetDocumentTypeFolderByIdData, GetDocumentTypeFolderByIdError, GetDocumentTypeFolderByIdResponse, DeleteDocumentTypeFolderByIdData, DeleteDocumentTypeFolderByIdError, DeleteDocumentTypeFolderByIdResponse, PutDocumentTypeFolderByIdData, PutDocumentTypeFolderByIdError, PutDocumentTypeFolderByIdResponse, PostDocumentTypeImportData, PostDocumentTypeImportError, PostDocumentTypeImportResponse, GetItemDocumentTypeData, GetItemDocumentTypeError, GetItemDocumentTypeResponse, GetItemDocumentTypeSearchData, GetItemDocumentTypeSearchError, GetItemDocumentTypeSearchResponse, GetTreeDocumentTypeAncestorsData, GetTreeDocumentTypeAncestorsError, GetTreeDocumentTypeAncestorsResponse, GetTreeDocumentTypeChildrenData, GetTreeDocumentTypeChildrenError, GetTreeDocumentTypeChildrenResponse, GetTreeDocumentTypeRootData, GetTreeDocumentTypeRootError, GetTreeDocumentTypeRootResponse, GetDocumentVersionData, GetDocumentVersionError, GetDocumentVersionResponse, GetDocumentVersionByIdData, GetDocumentVersionByIdError, GetDocumentVersionByIdResponse, PutDocumentVersionByIdPreventCleanupData, PutDocumentVersionByIdPreventCleanupError, PutDocumentVersionByIdPreventCleanupResponse, PostDocumentVersionByIdRollbackData, PostDocumentVersionByIdRollbackError, PostDocumentVersionByIdRollbackResponse, GetCollectionDocumentByIdData, GetCollectionDocumentByIdError, GetCollectionDocumentByIdResponse, PostDocumentData, PostDocumentError, PostDocumentResponse, GetDocumentByIdData, GetDocumentByIdError, GetDocumentByIdResponse, DeleteDocumentByIdData, DeleteDocumentByIdError, DeleteDocumentByIdResponse, PutDocumentByIdData, PutDocumentByIdError, PutDocumentByIdResponse, GetDocumentByIdAuditLogData, GetDocumentByIdAuditLogError, GetDocumentByIdAuditLogResponse, PostDocumentByIdCopyData, PostDocumentByIdCopyError, PostDocumentByIdCopyResponse, GetDocumentByIdDomainsData, GetDocumentByIdDomainsError, GetDocumentByIdDomainsResponse, PutDocumentByIdDomainsData, PutDocumentByIdDomainsError, PutDocumentByIdDomainsResponse, PutDocumentByIdMoveData, PutDocumentByIdMoveError, PutDocumentByIdMoveResponse, PutDocumentByIdMoveToRecycleBinData, PutDocumentByIdMoveToRecycleBinError, PutDocumentByIdMoveToRecycleBinResponse, GetDocumentByIdNotificationsData, GetDocumentByIdNotificationsError, GetDocumentByIdNotificationsResponse, PutDocumentByIdNotificationsData, PutDocumentByIdNotificationsError, PutDocumentByIdNotificationsResponse, PostDocumentByIdPublicAccessData, PostDocumentByIdPublicAccessError, PostDocumentByIdPublicAccessResponse, DeleteDocumentByIdPublicAccessData, DeleteDocumentByIdPublicAccessError, DeleteDocumentByIdPublicAccessResponse, GetDocumentByIdPublicAccessData, GetDocumentByIdPublicAccessError, GetDocumentByIdPublicAccessResponse, PutDocumentByIdPublicAccessData, PutDocumentByIdPublicAccessError, PutDocumentByIdPublicAccessResponse, PutDocumentByIdPublishData, PutDocumentByIdPublishError, PutDocumentByIdPublishResponse, PutDocumentByIdPublishWithDescendantsData, PutDocumentByIdPublishWithDescendantsError, PutDocumentByIdPublishWithDescendantsResponse, GetDocumentByIdPublishedData, GetDocumentByIdPublishedError, GetDocumentByIdPublishedResponse, GetDocumentByIdReferencedByData, GetDocumentByIdReferencedByError, GetDocumentByIdReferencedByResponse, GetDocumentByIdReferencedDescendantsData, GetDocumentByIdReferencedDescendantsError, GetDocumentByIdReferencedDescendantsResponse, PutDocumentByIdUnpublishData, PutDocumentByIdUnpublishError, PutDocumentByIdUnpublishResponse, PutDocumentByIdValidateData, PutDocumentByIdValidateError, PutDocumentByIdValidateResponse, PutUmbracoManagementApiV11DocumentByIdValidate11Data, PutUmbracoManagementApiV11DocumentByIdValidate11Error, PutUmbracoManagementApiV11DocumentByIdValidate11Response, GetDocumentAreReferencedData, GetDocumentAreReferencedError, GetDocumentAreReferencedResponse, GetDocumentConfigurationError, GetDocumentConfigurationResponse, GetUmbracoManagementApiV1DocumentPublicAccessDefaultPagesError, GetUmbracoManagementApiV1DocumentPublicAccessDefaultPagesResponse, PutDocumentSortData, PutDocumentSortError, PutDocumentSortResponse, GetDocumentUrlsData, GetDocumentUrlsError, GetDocumentUrlsResponse, PostDocumentValidateData, PostDocumentValidateError, PostDocumentValidateResponse, GetItemDocumentData, GetItemDocumentError, GetItemDocumentResponse, GetItemDocumentSearchData, GetItemDocumentSearchError, GetItemDocumentSearchResponse, DeleteRecycleBinDocumentError, DeleteRecycleBinDocumentResponse, DeleteRecycleBinDocumentByIdData, DeleteRecycleBinDocumentByIdError, DeleteRecycleBinDocumentByIdResponse, GetRecycleBinDocumentByIdOriginalParentData, GetRecycleBinDocumentByIdOriginalParentError, GetRecycleBinDocumentByIdOriginalParentResponse, PutRecycleBinDocumentByIdRestoreData, PutRecycleBinDocumentByIdRestoreError, PutRecycleBinDocumentByIdRestoreResponse, GetRecycleBinDocumentChildrenData, GetRecycleBinDocumentChildrenError, GetRecycleBinDocumentChildrenResponse, GetRecycleBinDocumentRootData, GetRecycleBinDocumentRootError, GetRecycleBinDocumentRootResponse, GetTreeDocumentAncestorsData, GetTreeDocumentAncestorsError, GetTreeDocumentAncestorsResponse, GetTreeDocumentChildrenData, GetTreeDocumentChildrenError, GetTreeDocumentChildrenResponse, GetTreeDocumentRootData, GetTreeDocumentRootError, GetTreeDocumentRootResponse, PostDynamicRootQueryData, PostDynamicRootQueryError, PostDynamicRootQueryResponse, GetDynamicRootStepsError, GetDynamicRootStepsResponse, GetHealthCheckGroupData, GetHealthCheckGroupError, GetHealthCheckGroupResponse, GetHealthCheckGroupByNameData, GetHealthCheckGroupByNameError, GetHealthCheckGroupByNameResponse, PostHealthCheckGroupByNameCheckData, PostHealthCheckGroupByNameCheckError, PostHealthCheckGroupByNameCheckResponse, PostHealthCheckExecuteActionData, PostHealthCheckExecuteActionError, PostHealthCheckExecuteActionResponse, GetHelpData, GetHelpError, GetHelpResponse, GetImagingResizeUrlsData, GetImagingResizeUrlsError, GetImagingResizeUrlsResponse, GetImportAnalyzeData, GetImportAnalyzeError, GetImportAnalyzeResponse, GetIndexerData, GetIndexerError, GetIndexerResponse, GetIndexerByIndexNameData, GetIndexerByIndexNameError, GetIndexerByIndexNameResponse, PostIndexerByIndexNameRebuildData, PostIndexerByIndexNameRebuildError, PostIndexerByIndexNameRebuildResponse, GetInstallSettingsError, GetInstallSettingsResponse, PostInstallSetupData, PostInstallSetupError, PostInstallSetupResponse, PostInstallValidateDatabaseData, PostInstallValidateDatabaseError, PostInstallValidateDatabaseResponse, GetItemLanguageData, GetItemLanguageError, GetItemLanguageResponse, GetItemLanguageDefaultError, GetItemLanguageDefaultResponse, GetLanguageData, GetLanguageError, GetLanguageResponse, PostLanguageData, PostLanguageError, PostLanguageResponse, GetLanguageByIsoCodeData, GetLanguageByIsoCodeError, GetLanguageByIsoCodeResponse, DeleteLanguageByIsoCodeData, DeleteLanguageByIsoCodeError, DeleteLanguageByIsoCodeResponse, PutLanguageByIsoCodeData, PutLanguageByIsoCodeError, PutLanguageByIsoCodeResponse, GetLogViewerLevelData, GetLogViewerLevelError, GetLogViewerLevelResponse, GetLogViewerLevelCountData, GetLogViewerLevelCountError, GetLogViewerLevelCountResponse, GetLogViewerLogData, GetLogViewerLogError, GetLogViewerLogResponse, GetLogViewerMessageTemplateData, GetLogViewerMessageTemplateError, GetLogViewerMessageTemplateResponse, GetLogViewerSavedSearchData, GetLogViewerSavedSearchError, GetLogViewerSavedSearchResponse, PostLogViewerSavedSearchData, PostLogViewerSavedSearchError, PostLogViewerSavedSearchResponse, GetLogViewerSavedSearchByNameData, GetLogViewerSavedSearchByNameError, GetLogViewerSavedSearchByNameResponse, DeleteLogViewerSavedSearchByNameData, DeleteLogViewerSavedSearchByNameError, DeleteLogViewerSavedSearchByNameResponse, GetLogViewerValidateLogsSizeData, GetLogViewerValidateLogsSizeError, GetLogViewerValidateLogsSizeResponse, GetManifestManifestError, GetManifestManifestResponse, GetManifestManifestPrivateError, GetManifestManifestPrivateResponse, GetManifestManifestPublicError, GetManifestManifestPublicResponse, GetItemMediaTypeData, GetItemMediaTypeError, GetItemMediaTypeResponse, GetItemMediaTypeAllowedData, GetItemMediaTypeAllowedError, GetItemMediaTypeAllowedResponse, GetItemMediaTypeFoldersData, GetItemMediaTypeFoldersError, GetItemMediaTypeFoldersResponse, GetItemMediaTypeSearchData, GetItemMediaTypeSearchError, GetItemMediaTypeSearchResponse, PostMediaTypeData, PostMediaTypeError, PostMediaTypeResponse, GetMediaTypeByIdData, GetMediaTypeByIdError, GetMediaTypeByIdResponse, DeleteMediaTypeByIdData, DeleteMediaTypeByIdError, DeleteMediaTypeByIdResponse, PutMediaTypeByIdData, PutMediaTypeByIdError, PutMediaTypeByIdResponse, GetMediaTypeByIdAllowedChildrenData, GetMediaTypeByIdAllowedChildrenError, GetMediaTypeByIdAllowedChildrenResponse, GetMediaTypeByIdCompositionReferencesData, GetMediaTypeByIdCompositionReferencesError, GetMediaTypeByIdCompositionReferencesResponse, PostMediaTypeByIdCopyData, PostMediaTypeByIdCopyError, PostMediaTypeByIdCopyResponse, GetMediaTypeByIdExportData, GetMediaTypeByIdExportError, GetMediaTypeByIdExportResponse, PutMediaTypeByIdImportData, PutMediaTypeByIdImportError, PutMediaTypeByIdImportResponse, PutMediaTypeByIdMoveData, PutMediaTypeByIdMoveError, PutMediaTypeByIdMoveResponse, GetMediaTypeAllowedAtRootData, GetMediaTypeAllowedAtRootError, GetMediaTypeAllowedAtRootResponse, PostMediaTypeAvailableCompositionsData, PostMediaTypeAvailableCompositionsError, PostMediaTypeAvailableCompositionsResponse, GetMediaTypeConfigurationError, GetMediaTypeConfigurationResponse, PostMediaTypeFolderData, PostMediaTypeFolderError, PostMediaTypeFolderResponse, GetMediaTypeFolderByIdData, GetMediaTypeFolderByIdError, GetMediaTypeFolderByIdResponse, DeleteMediaTypeFolderByIdData, DeleteMediaTypeFolderByIdError, DeleteMediaTypeFolderByIdResponse, PutMediaTypeFolderByIdData, PutMediaTypeFolderByIdError, PutMediaTypeFolderByIdResponse, PostMediaTypeImportData, PostMediaTypeImportError, PostMediaTypeImportResponse, GetTreeMediaTypeAncestorsData, GetTreeMediaTypeAncestorsError, GetTreeMediaTypeAncestorsResponse, GetTreeMediaTypeChildrenData, GetTreeMediaTypeChildrenError, GetTreeMediaTypeChildrenResponse, GetTreeMediaTypeRootData, GetTreeMediaTypeRootError, GetTreeMediaTypeRootResponse, GetCollectionMediaData, GetCollectionMediaError, GetCollectionMediaResponse, GetItemMediaData, GetItemMediaError, GetItemMediaResponse, GetItemMediaSearchData, GetItemMediaSearchError, GetItemMediaSearchResponse, PostMediaData, PostMediaError, PostMediaResponse, GetMediaByIdData, GetMediaByIdError, GetMediaByIdResponse, DeleteMediaByIdData, DeleteMediaByIdError, DeleteMediaByIdResponse, PutMediaByIdData, PutMediaByIdError, PutMediaByIdResponse, GetMediaByIdAuditLogData, GetMediaByIdAuditLogError, GetMediaByIdAuditLogResponse, PutMediaByIdMoveData, PutMediaByIdMoveError, PutMediaByIdMoveResponse, PutMediaByIdMoveToRecycleBinData, PutMediaByIdMoveToRecycleBinError, PutMediaByIdMoveToRecycleBinResponse, GetMediaByIdReferencedByData, GetMediaByIdReferencedByError, GetMediaByIdReferencedByResponse, GetMediaByIdReferencedDescendantsData, GetMediaByIdReferencedDescendantsError, GetMediaByIdReferencedDescendantsResponse, PutMediaByIdValidateData, PutMediaByIdValidateError, PutMediaByIdValidateResponse, GetMediaAreReferencedData, GetMediaAreReferencedError, GetMediaAreReferencedResponse, GetMediaConfigurationError, GetMediaConfigurationResponse, PutMediaSortData, PutMediaSortError, PutMediaSortResponse, GetMediaUrlsData, GetMediaUrlsError, GetMediaUrlsResponse, PostMediaValidateData, PostMediaValidateError, PostMediaValidateResponse, DeleteRecycleBinMediaError, DeleteRecycleBinMediaResponse, DeleteRecycleBinMediaByIdData, DeleteRecycleBinMediaByIdError, DeleteRecycleBinMediaByIdResponse, GetRecycleBinMediaByIdOriginalParentData, GetRecycleBinMediaByIdOriginalParentError, GetRecycleBinMediaByIdOriginalParentResponse, PutRecycleBinMediaByIdRestoreData, PutRecycleBinMediaByIdRestoreError, PutRecycleBinMediaByIdRestoreResponse, GetRecycleBinMediaChildrenData, GetRecycleBinMediaChildrenError, GetRecycleBinMediaChildrenResponse, GetRecycleBinMediaRootData, GetRecycleBinMediaRootError, GetRecycleBinMediaRootResponse, GetTreeMediaAncestorsData, GetTreeMediaAncestorsError, GetTreeMediaAncestorsResponse, GetTreeMediaChildrenData, GetTreeMediaChildrenError, GetTreeMediaChildrenResponse, GetTreeMediaRootData, GetTreeMediaRootError, GetTreeMediaRootResponse, GetItemMemberGroupData, GetItemMemberGroupError, GetItemMemberGroupResponse, GetMemberGroupData, GetMemberGroupError, GetMemberGroupResponse, PostMemberGroupData, PostMemberGroupError, PostMemberGroupResponse, GetMemberGroupByIdData, GetMemberGroupByIdError, GetMemberGroupByIdResponse, DeleteMemberGroupByIdData, DeleteMemberGroupByIdError, DeleteMemberGroupByIdResponse, PutMemberGroupByIdData, PutMemberGroupByIdError, PutMemberGroupByIdResponse, GetTreeMemberGroupRootData, GetTreeMemberGroupRootError, GetTreeMemberGroupRootResponse, GetItemMemberTypeData, GetItemMemberTypeError, GetItemMemberTypeResponse, GetItemMemberTypeSearchData, GetItemMemberTypeSearchError, GetItemMemberTypeSearchResponse, PostMemberTypeData, PostMemberTypeError, PostMemberTypeResponse, GetMemberTypeByIdData, GetMemberTypeByIdError, GetMemberTypeByIdResponse, DeleteMemberTypeByIdData, DeleteMemberTypeByIdError, DeleteMemberTypeByIdResponse, PutMemberTypeByIdData, PutMemberTypeByIdError, PutMemberTypeByIdResponse, GetMemberTypeByIdCompositionReferencesData, GetMemberTypeByIdCompositionReferencesError, GetMemberTypeByIdCompositionReferencesResponse, PostMemberTypeByIdCopyData, PostMemberTypeByIdCopyError, PostMemberTypeByIdCopyResponse, PostMemberTypeAvailableCompositionsData, PostMemberTypeAvailableCompositionsError, PostMemberTypeAvailableCompositionsResponse, GetMemberTypeConfigurationError, GetMemberTypeConfigurationResponse, GetTreeMemberTypeRootData, GetTreeMemberTypeRootError, GetTreeMemberTypeRootResponse, GetFilterMemberData, GetFilterMemberError, GetFilterMemberResponse, GetItemMemberData, GetItemMemberError, GetItemMemberResponse, GetItemMemberSearchData, GetItemMemberSearchError, GetItemMemberSearchResponse, PostMemberData, PostMemberError, PostMemberResponse, GetMemberByIdData, GetMemberByIdError, GetMemberByIdResponse, DeleteMemberByIdData, DeleteMemberByIdError, DeleteMemberByIdResponse, PutMemberByIdData, PutMemberByIdError, PutMemberByIdResponse, PutMemberByIdValidateData, PutMemberByIdValidateError, PutMemberByIdValidateResponse, GetMemberConfigurationError, GetMemberConfigurationResponse, PostMemberValidateData, PostMemberValidateError, PostMemberValidateResponse, PostModelsBuilderBuildError, PostModelsBuilderBuildResponse, GetModelsBuilderDashboardError, GetModelsBuilderDashboardResponse, GetModelsBuilderStatusError, GetModelsBuilderStatusResponse, GetObjectTypesData, GetObjectTypesError, GetObjectTypesResponse, GetOembedQueryData, GetOembedQueryError, GetOembedQueryResponse, PostPackageByNameRunMigrationData, PostPackageByNameRunMigrationError, PostPackageByNameRunMigrationResponse, GetPackageConfigurationError, GetPackageConfigurationResponse, GetPackageCreatedData, GetPackageCreatedError, GetPackageCreatedResponse, PostPackageCreatedData, PostPackageCreatedError, PostPackageCreatedResponse, GetPackageCreatedByIdData, GetPackageCreatedByIdError, GetPackageCreatedByIdResponse, DeletePackageCreatedByIdData, DeletePackageCreatedByIdError, DeletePackageCreatedByIdResponse, PutPackageCreatedByIdData, PutPackageCreatedByIdError, PutPackageCreatedByIdResponse, GetPackageCreatedByIdDownloadData, GetPackageCreatedByIdDownloadError, GetPackageCreatedByIdDownloadResponse, GetPackageMigrationStatusData, GetPackageMigrationStatusError, GetPackageMigrationStatusResponse, GetItemPartialViewData, GetItemPartialViewError, GetItemPartialViewResponse, PostPartialViewData, PostPartialViewError, PostPartialViewResponse, GetPartialViewByPathData, GetPartialViewByPathError, GetPartialViewByPathResponse, DeletePartialViewByPathData, DeletePartialViewByPathError, DeletePartialViewByPathResponse, PutPartialViewByPathData, PutPartialViewByPathError, PutPartialViewByPathResponse, PutPartialViewByPathRenameData, PutPartialViewByPathRenameError, PutPartialViewByPathRenameResponse, PostPartialViewFolderData, PostPartialViewFolderError, PostPartialViewFolderResponse, GetPartialViewFolderByPathData, GetPartialViewFolderByPathError, GetPartialViewFolderByPathResponse, DeletePartialViewFolderByPathData, DeletePartialViewFolderByPathError, DeletePartialViewFolderByPathResponse, GetPartialViewSnippetData, GetPartialViewSnippetError, GetPartialViewSnippetResponse, GetPartialViewSnippetByIdData, GetPartialViewSnippetByIdError, GetPartialViewSnippetByIdResponse, GetTreePartialViewAncestorsData, GetTreePartialViewAncestorsError, GetTreePartialViewAncestorsResponse, GetTreePartialViewChildrenData, GetTreePartialViewChildrenError, GetTreePartialViewChildrenResponse, GetTreePartialViewRootData, GetTreePartialViewRootError, GetTreePartialViewRootResponse, DeletePreviewError, DeletePreviewResponse, PostPreviewError, PostPreviewResponse, GetProfilingStatusError, GetProfilingStatusResponse, PutProfilingStatusData, PutProfilingStatusError, PutProfilingStatusResponse, GetPropertyTypeIsUsedData, GetPropertyTypeIsUsedError, GetPropertyTypeIsUsedResponse, PostPublishedCacheRebuildError, PostPublishedCacheRebuildResponse, PostPublishedCacheReloadError, PostPublishedCacheReloadResponse, GetRedirectManagementData, GetRedirectManagementError, GetRedirectManagementResponse, GetRedirectManagementByIdData, GetRedirectManagementByIdError, GetRedirectManagementByIdResponse, DeleteRedirectManagementByIdData, DeleteRedirectManagementByIdError, DeleteRedirectManagementByIdResponse, GetRedirectManagementStatusError, GetRedirectManagementStatusResponse, PostRedirectManagementStatusData, PostRedirectManagementStatusError, PostRedirectManagementStatusResponse, GetItemRelationTypeData, GetItemRelationTypeError, GetItemRelationTypeResponse, GetRelationTypeData, GetRelationTypeError, GetRelationTypeResponse, GetRelationTypeByIdData, GetRelationTypeByIdError, GetRelationTypeByIdResponse, GetRelationByRelationTypeIdData, GetRelationByRelationTypeIdError, GetRelationByRelationTypeIdResponse, GetItemScriptData, GetItemScriptError, GetItemScriptResponse, PostScriptData, PostScriptError, PostScriptResponse, GetScriptByPathData, GetScriptByPathError, GetScriptByPathResponse, DeleteScriptByPathData, DeleteScriptByPathError, DeleteScriptByPathResponse, PutScriptByPathData, PutScriptByPathError, PutScriptByPathResponse, PutScriptByPathRenameData, PutScriptByPathRenameError, PutScriptByPathRenameResponse, PostScriptFolderData, PostScriptFolderError, PostScriptFolderResponse, GetScriptFolderByPathData, GetScriptFolderByPathError, GetScriptFolderByPathResponse, DeleteScriptFolderByPathData, DeleteScriptFolderByPathError, DeleteScriptFolderByPathResponse, GetTreeScriptAncestorsData, GetTreeScriptAncestorsError, GetTreeScriptAncestorsResponse, GetTreeScriptChildrenData, GetTreeScriptChildrenError, GetTreeScriptChildrenResponse, GetTreeScriptRootData, GetTreeScriptRootError, GetTreeScriptRootResponse, GetSearcherData, GetSearcherError, GetSearcherResponse, GetSearcherBySearcherNameQueryData, GetSearcherBySearcherNameQueryError, GetSearcherBySearcherNameQueryResponse, GetSecurityConfigurationError, GetSecurityConfigurationResponse, PostSecurityForgotPasswordData, PostSecurityForgotPasswordError, PostSecurityForgotPasswordResponse, PostSecurityForgotPasswordResetData, PostSecurityForgotPasswordResetError, PostSecurityForgotPasswordResetResponse, PostSecurityForgotPasswordVerifyData, PostSecurityForgotPasswordVerifyError, PostSecurityForgotPasswordVerifyResponse, GetSegmentData, GetSegmentError, GetSegmentResponse, GetServerConfigurationError, GetServerConfigurationResponse, GetServerInformationError, GetServerInformationResponse, GetServerStatusError, GetServerStatusResponse, GetServerTroubleshootingError, GetServerTroubleshootingResponse, GetServerUpgradeCheckError, GetServerUpgradeCheckResponse, GetItemStaticFileData, GetItemStaticFileError, GetItemStaticFileResponse, GetTreeStaticFileAncestorsData, GetTreeStaticFileAncestorsError, GetTreeStaticFileAncestorsResponse, GetTreeStaticFileChildrenData, GetTreeStaticFileChildrenError, GetTreeStaticFileChildrenResponse, GetTreeStaticFileRootData, GetTreeStaticFileRootError, GetTreeStaticFileRootResponse, GetItemStylesheetData, GetItemStylesheetError, GetItemStylesheetResponse, PostStylesheetData, PostStylesheetError, PostStylesheetResponse, GetStylesheetByPathData, GetStylesheetByPathError, GetStylesheetByPathResponse, DeleteStylesheetByPathData, DeleteStylesheetByPathError, DeleteStylesheetByPathResponse, PutStylesheetByPathData, PutStylesheetByPathError, PutStylesheetByPathResponse, PutStylesheetByPathRenameData, PutStylesheetByPathRenameError, PutStylesheetByPathRenameResponse, PostStylesheetFolderData, PostStylesheetFolderError, PostStylesheetFolderResponse, GetStylesheetFolderByPathData, GetStylesheetFolderByPathError, GetStylesheetFolderByPathResponse, DeleteStylesheetFolderByPathData, DeleteStylesheetFolderByPathError, DeleteStylesheetFolderByPathResponse, GetTreeStylesheetAncestorsData, GetTreeStylesheetAncestorsError, GetTreeStylesheetAncestorsResponse, GetTreeStylesheetChildrenData, GetTreeStylesheetChildrenError, GetTreeStylesheetChildrenResponse, GetTreeStylesheetRootData, GetTreeStylesheetRootError, GetTreeStylesheetRootResponse, GetTagData, GetTagError, GetTagResponse, GetTelemetryData, GetTelemetryError, GetTelemetryResponse, GetTelemetryLevelError, GetTelemetryLevelResponse, PostTelemetryLevelData, PostTelemetryLevelError, PostTelemetryLevelResponse, GetItemTemplateData, GetItemTemplateError, GetItemTemplateResponse, GetItemTemplateSearchData, GetItemTemplateSearchError, GetItemTemplateSearchResponse, PostTemplateData, PostTemplateError, PostTemplateResponse, GetTemplateByIdData, GetTemplateByIdError, GetTemplateByIdResponse, DeleteTemplateByIdData, DeleteTemplateByIdError, DeleteTemplateByIdResponse, PutTemplateByIdData, PutTemplateByIdError, PutTemplateByIdResponse, GetTemplateConfigurationError, GetTemplateConfigurationResponse, PostTemplateQueryExecuteData, PostTemplateQueryExecuteError, PostTemplateQueryExecuteResponse, GetTemplateQuerySettingsError, GetTemplateQuerySettingsResponse, GetTreeTemplateAncestorsData, GetTreeTemplateAncestorsError, GetTreeTemplateAncestorsResponse, GetTreeTemplateChildrenData, GetTreeTemplateChildrenError, GetTreeTemplateChildrenResponse, GetTreeTemplateRootData, GetTreeTemplateRootError, GetTreeTemplateRootResponse, PostTemporaryFileData, PostTemporaryFileError, PostTemporaryFileResponse, GetTemporaryFileByIdData, GetTemporaryFileByIdError, GetTemporaryFileByIdResponse, DeleteTemporaryFileByIdData, DeleteTemporaryFileByIdError, DeleteTemporaryFileByIdResponse, GetTemporaryFileConfigurationError, GetTemporaryFileConfigurationResponse, PostUpgradeAuthorizeError, PostUpgradeAuthorizeResponse, GetUpgradeSettingsError, GetUpgradeSettingsResponse, PostUserDataData, PostUserDataError, PostUserDataResponse, GetUserDataData, GetUserDataError, GetUserDataResponse, PutUserDataData, PutUserDataError, PutUserDataResponse, GetUserDataByIdData, GetUserDataByIdError, GetUserDataByIdResponse, GetFilterUserGroupData, GetFilterUserGroupError, GetFilterUserGroupResponse, GetItemUserGroupData, GetItemUserGroupError, GetItemUserGroupResponse, DeleteUserGroupData, DeleteUserGroupError, DeleteUserGroupResponse, PostUserGroupData, PostUserGroupError, PostUserGroupResponse, GetUserGroupData, GetUserGroupError, GetUserGroupResponse, GetUserGroupByIdData, GetUserGroupByIdError, GetUserGroupByIdResponse, DeleteUserGroupByIdData, DeleteUserGroupByIdError, DeleteUserGroupByIdResponse, PutUserGroupByIdData, PutUserGroupByIdError, PutUserGroupByIdResponse, DeleteUserGroupByIdUsersData, DeleteUserGroupByIdUsersError, DeleteUserGroupByIdUsersResponse, PostUserGroupByIdUsersData, PostUserGroupByIdUsersError, PostUserGroupByIdUsersResponse, GetFilterUserData, GetFilterUserError, GetFilterUserResponse, GetItemUserData, GetItemUserError, GetItemUserResponse, PostUserData, PostUserError, PostUserResponse, DeleteUserData, DeleteUserError, DeleteUserResponse, GetUserData, GetUserError, GetUserResponse, GetUserByIdData, GetUserByIdError, GetUserByIdResponse, DeleteUserByIdData, DeleteUserByIdError, DeleteUserByIdResponse, PutUserByIdData, PutUserByIdError, PutUserByIdResponse, GetUserById2FaData, GetUserById2FaError, GetUserById2FaResponse, DeleteUserById2FaByProviderNameData, DeleteUserById2FaByProviderNameError, DeleteUserById2FaByProviderNameResponse, GetUserByIdCalculateStartNodesData, GetUserByIdCalculateStartNodesError, GetUserByIdCalculateStartNodesResponse, PostUserByIdChangePasswordData, PostUserByIdChangePasswordError, PostUserByIdChangePasswordResponse, PostUserByIdClientCredentialsData, PostUserByIdClientCredentialsError, PostUserByIdClientCredentialsResponse, GetUserByIdClientCredentialsData, GetUserByIdClientCredentialsError, GetUserByIdClientCredentialsResponse, DeleteUserByIdClientCredentialsByClientIdData, DeleteUserByIdClientCredentialsByClientIdError, DeleteUserByIdClientCredentialsByClientIdResponse, PostUserByIdResetPasswordData, PostUserByIdResetPasswordError, PostUserByIdResetPasswordResponse, DeleteUserAvatarByIdData, DeleteUserAvatarByIdError, DeleteUserAvatarByIdResponse, PostUserAvatarByIdData, PostUserAvatarByIdError, PostUserAvatarByIdResponse, GetUserConfigurationError, GetUserConfigurationResponse, GetUserCurrentError, GetUserCurrentResponse, GetUserCurrent2FaError, GetUserCurrent2FaResponse, DeleteUserCurrent2FaByProviderNameData, DeleteUserCurrent2FaByProviderNameError, DeleteUserCurrent2FaByProviderNameResponse, PostUserCurrent2FaByProviderNameData, PostUserCurrent2FaByProviderNameError, PostUserCurrent2FaByProviderNameResponse, GetUserCurrent2FaByProviderNameData, GetUserCurrent2FaByProviderNameError, GetUserCurrent2FaByProviderNameResponse, PostUserCurrentAvatarData, PostUserCurrentAvatarError, PostUserCurrentAvatarResponse, PostUserCurrentChangePasswordData, PostUserCurrentChangePasswordError, PostUserCurrentChangePasswordResponse, GetUserCurrentConfigurationError, GetUserCurrentConfigurationResponse, GetUserCurrentLoginProvidersError, GetUserCurrentLoginProvidersResponse, GetUserCurrentPermissionsData, GetUserCurrentPermissionsError, GetUserCurrentPermissionsResponse, GetUserCurrentPermissionsDocumentData, GetUserCurrentPermissionsDocumentError, GetUserCurrentPermissionsDocumentResponse, GetUserCurrentPermissionsMediaData, GetUserCurrentPermissionsMediaError, GetUserCurrentPermissionsMediaResponse, PostUserDisableData, PostUserDisableError, PostUserDisableResponse, PostUserEnableData, PostUserEnableError, PostUserEnableResponse, PostUserInviteData, PostUserInviteError, PostUserInviteResponse, PostUserInviteCreatePasswordData, PostUserInviteCreatePasswordError, PostUserInviteCreatePasswordResponse, PostUserInviteResendData, PostUserInviteResendError, PostUserInviteResendResponse, PostUserInviteVerifyData, PostUserInviteVerifyError, PostUserInviteVerifyResponse, PostUserSetUserGroupsData, PostUserSetUserGroupsError, PostUserSetUserGroupsResponse, PostUserUnlockData, PostUserUnlockError, PostUserUnlockResponse, GetItemWebhookData, GetItemWebhookError, GetItemWebhookResponse, GetWebhookData, GetWebhookError, GetWebhookResponse, PostWebhookData, PostWebhookError, PostWebhookResponse, GetWebhookByIdData, GetWebhookByIdError, GetWebhookByIdResponse, DeleteWebhookByIdData, DeleteWebhookByIdError, DeleteWebhookByIdResponse, PutWebhookByIdData, PutWebhookByIdError, PutWebhookByIdResponse, GetWebhookEventsData, GetWebhookEventsError, GetWebhookEventsResponse, GetWebhookLogsData, GetWebhookLogsError, GetWebhookLogsResponse } from './types.gen';

export const client = createClient(createConfig());

export class CultureService {
    public static getCulture<ThrowOnError extends boolean = false>(options?: Options<GetCultureData, ThrowOnError>) {
        return (options?.client ?? client).get<GetCultureResponse, GetCultureError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/culture'
        });
    }
    
}

export class DataTypeService {
    public static postDataType<ThrowOnError extends boolean = false>(options?: Options<PostDataTypeData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDataTypeResponse, PostDataTypeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type'
        });
    }
    
    public static getDataTypeById<ThrowOnError extends boolean = false>(options: Options<GetDataTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDataTypeByIdResponse, GetDataTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type/{id}'
        });
    }
    
    public static deleteDataTypeById<ThrowOnError extends boolean = false>(options: Options<DeleteDataTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteDataTypeByIdResponse, DeleteDataTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type/{id}'
        });
    }
    
    public static putDataTypeById<ThrowOnError extends boolean = false>(options: Options<PutDataTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDataTypeByIdResponse, PutDataTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type/{id}'
        });
    }
    
    public static postDataTypeByIdCopy<ThrowOnError extends boolean = false>(options: Options<PostDataTypeByIdCopyData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDataTypeByIdCopyResponse, PostDataTypeByIdCopyError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type/{id}/copy'
        });
    }
    
    public static getDataTypeByIdIsUsed<ThrowOnError extends boolean = false>(options: Options<GetDataTypeByIdIsUsedData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDataTypeByIdIsUsedResponse, GetDataTypeByIdIsUsedError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type/{id}/is-used'
        });
    }
    
    public static putDataTypeByIdMove<ThrowOnError extends boolean = false>(options: Options<PutDataTypeByIdMoveData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDataTypeByIdMoveResponse, PutDataTypeByIdMoveError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type/{id}/move'
        });
    }
    
    public static getDataTypeByIdReferences<ThrowOnError extends boolean = false>(options: Options<GetDataTypeByIdReferencesData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDataTypeByIdReferencesResponse, GetDataTypeByIdReferencesError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type/{id}/references'
        });
    }
    
    public static getDataTypeConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetDataTypeConfigurationResponse, GetDataTypeConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type/configuration'
        });
    }
    
    public static postDataTypeFolder<ThrowOnError extends boolean = false>(options?: Options<PostDataTypeFolderData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDataTypeFolderResponse, PostDataTypeFolderError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type/folder'
        });
    }
    
    public static getDataTypeFolderById<ThrowOnError extends boolean = false>(options: Options<GetDataTypeFolderByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDataTypeFolderByIdResponse, GetDataTypeFolderByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type/folder/{id}'
        });
    }
    
    public static deleteDataTypeFolderById<ThrowOnError extends boolean = false>(options: Options<DeleteDataTypeFolderByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteDataTypeFolderByIdResponse, DeleteDataTypeFolderByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type/folder/{id}'
        });
    }
    
    public static putDataTypeFolderById<ThrowOnError extends boolean = false>(options: Options<PutDataTypeFolderByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDataTypeFolderByIdResponse, PutDataTypeFolderByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/data-type/folder/{id}'
        });
    }
    
    public static getFilterDataType<ThrowOnError extends boolean = false>(options?: Options<GetFilterDataTypeData, ThrowOnError>) {
        return (options?.client ?? client).get<GetFilterDataTypeResponse, GetFilterDataTypeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/filter/data-type'
        });
    }
    
    public static getItemDataType<ThrowOnError extends boolean = false>(options?: Options<GetItemDataTypeData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemDataTypeResponse, GetItemDataTypeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/data-type'
        });
    }
    
    public static getItemDataTypeSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemDataTypeSearchData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemDataTypeSearchResponse, GetItemDataTypeSearchError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/data-type/search'
        });
    }
    
    public static getTreeDataTypeAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeDataTypeAncestorsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDataTypeAncestorsResponse, GetTreeDataTypeAncestorsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/data-type/ancestors'
        });
    }
    
    public static getTreeDataTypeChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeDataTypeChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDataTypeChildrenResponse, GetTreeDataTypeChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/data-type/children'
        });
    }
    
    public static getTreeDataTypeRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeDataTypeRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDataTypeRootResponse, GetTreeDataTypeRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/data-type/root'
        });
    }
    
}

export class DictionaryService {
    public static getDictionary<ThrowOnError extends boolean = false>(options?: Options<GetDictionaryData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDictionaryResponse, GetDictionaryError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/dictionary'
        });
    }
    
    public static postDictionary<ThrowOnError extends boolean = false>(options?: Options<PostDictionaryData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDictionaryResponse, PostDictionaryError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/dictionary'
        });
    }
    
    public static getDictionaryById<ThrowOnError extends boolean = false>(options: Options<GetDictionaryByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDictionaryByIdResponse, GetDictionaryByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/dictionary/{id}'
        });
    }
    
    public static deleteDictionaryById<ThrowOnError extends boolean = false>(options: Options<DeleteDictionaryByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteDictionaryByIdResponse, DeleteDictionaryByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/dictionary/{id}'
        });
    }
    
    public static putDictionaryById<ThrowOnError extends boolean = false>(options: Options<PutDictionaryByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDictionaryByIdResponse, PutDictionaryByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/dictionary/{id}'
        });
    }
    
    public static getDictionaryByIdExport<ThrowOnError extends boolean = false>(options: Options<GetDictionaryByIdExportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDictionaryByIdExportResponse, GetDictionaryByIdExportError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/dictionary/{id}/export'
        });
    }
    
    public static putDictionaryByIdMove<ThrowOnError extends boolean = false>(options: Options<PutDictionaryByIdMoveData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDictionaryByIdMoveResponse, PutDictionaryByIdMoveError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/dictionary/{id}/move'
        });
    }
    
    public static postDictionaryImport<ThrowOnError extends boolean = false>(options?: Options<PostDictionaryImportData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDictionaryImportResponse, PostDictionaryImportError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/dictionary/import'
        });
    }
    
    public static getItemDictionary<ThrowOnError extends boolean = false>(options?: Options<GetItemDictionaryData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemDictionaryResponse, GetItemDictionaryError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/dictionary'
        });
    }
    
    public static getTreeDictionaryAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeDictionaryAncestorsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDictionaryAncestorsResponse, GetTreeDictionaryAncestorsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/dictionary/ancestors'
        });
    }
    
    public static getTreeDictionaryChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeDictionaryChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDictionaryChildrenResponse, GetTreeDictionaryChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/dictionary/children'
        });
    }
    
    public static getTreeDictionaryRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeDictionaryRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDictionaryRootResponse, GetTreeDictionaryRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/dictionary/root'
        });
    }
    
}

export class DocumentBlueprintService {
    public static postDocumentBlueprint<ThrowOnError extends boolean = false>(options?: Options<PostDocumentBlueprintData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentBlueprintResponse, PostDocumentBlueprintError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-blueprint'
        });
    }
    
    public static getDocumentBlueprintById<ThrowOnError extends boolean = false>(options: Options<GetDocumentBlueprintByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentBlueprintByIdResponse, GetDocumentBlueprintByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-blueprint/{id}'
        });
    }
    
    public static deleteDocumentBlueprintById<ThrowOnError extends boolean = false>(options: Options<DeleteDocumentBlueprintByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteDocumentBlueprintByIdResponse, DeleteDocumentBlueprintByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-blueprint/{id}'
        });
    }
    
    public static putDocumentBlueprintById<ThrowOnError extends boolean = false>(options: Options<PutDocumentBlueprintByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentBlueprintByIdResponse, PutDocumentBlueprintByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-blueprint/{id}'
        });
    }
    
    public static putDocumentBlueprintByIdMove<ThrowOnError extends boolean = false>(options: Options<PutDocumentBlueprintByIdMoveData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentBlueprintByIdMoveResponse, PutDocumentBlueprintByIdMoveError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-blueprint/{id}/move'
        });
    }
    
    public static postDocumentBlueprintFolder<ThrowOnError extends boolean = false>(options?: Options<PostDocumentBlueprintFolderData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentBlueprintFolderResponse, PostDocumentBlueprintFolderError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-blueprint/folder'
        });
    }
    
    public static getDocumentBlueprintFolderById<ThrowOnError extends boolean = false>(options: Options<GetDocumentBlueprintFolderByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentBlueprintFolderByIdResponse, GetDocumentBlueprintFolderByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-blueprint/folder/{id}'
        });
    }
    
    public static deleteDocumentBlueprintFolderById<ThrowOnError extends boolean = false>(options: Options<DeleteDocumentBlueprintFolderByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteDocumentBlueprintFolderByIdResponse, DeleteDocumentBlueprintFolderByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-blueprint/folder/{id}'
        });
    }
    
    public static putDocumentBlueprintFolderById<ThrowOnError extends boolean = false>(options: Options<PutDocumentBlueprintFolderByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentBlueprintFolderByIdResponse, PutDocumentBlueprintFolderByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-blueprint/folder/{id}'
        });
    }
    
    public static postDocumentBlueprintFromDocument<ThrowOnError extends boolean = false>(options?: Options<PostDocumentBlueprintFromDocumentData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentBlueprintFromDocumentResponse, PostDocumentBlueprintFromDocumentError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-blueprint/from-document'
        });
    }
    
    public static getItemDocumentBlueprint<ThrowOnError extends boolean = false>(options?: Options<GetItemDocumentBlueprintData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemDocumentBlueprintResponse, GetItemDocumentBlueprintError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/document-blueprint'
        });
    }
    
    public static getTreeDocumentBlueprintAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentBlueprintAncestorsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDocumentBlueprintAncestorsResponse, GetTreeDocumentBlueprintAncestorsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/document-blueprint/ancestors'
        });
    }
    
    public static getTreeDocumentBlueprintChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentBlueprintChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDocumentBlueprintChildrenResponse, GetTreeDocumentBlueprintChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/document-blueprint/children'
        });
    }
    
    public static getTreeDocumentBlueprintRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentBlueprintRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDocumentBlueprintRootResponse, GetTreeDocumentBlueprintRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/document-blueprint/root'
        });
    }
    
}

export class DocumentTypeService {
    public static postDocumentType<ThrowOnError extends boolean = false>(options?: Options<PostDocumentTypeData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentTypeResponse, PostDocumentTypeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type'
        });
    }
    
    public static getDocumentTypeById<ThrowOnError extends boolean = false>(options: Options<GetDocumentTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentTypeByIdResponse, GetDocumentTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/{id}'
        });
    }
    
    public static deleteDocumentTypeById<ThrowOnError extends boolean = false>(options: Options<DeleteDocumentTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteDocumentTypeByIdResponse, DeleteDocumentTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/{id}'
        });
    }
    
    public static putDocumentTypeById<ThrowOnError extends boolean = false>(options: Options<PutDocumentTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentTypeByIdResponse, PutDocumentTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/{id}'
        });
    }
    
    public static getDocumentTypeByIdAllowedChildren<ThrowOnError extends boolean = false>(options: Options<GetDocumentTypeByIdAllowedChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentTypeByIdAllowedChildrenResponse, GetDocumentTypeByIdAllowedChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/{id}/allowed-children'
        });
    }
    
    public static getDocumentTypeByIdBlueprint<ThrowOnError extends boolean = false>(options: Options<GetDocumentTypeByIdBlueprintData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentTypeByIdBlueprintResponse, GetDocumentTypeByIdBlueprintError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/{id}/blueprint'
        });
    }
    
    public static getDocumentTypeByIdCompositionReferences<ThrowOnError extends boolean = false>(options: Options<GetDocumentTypeByIdCompositionReferencesData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentTypeByIdCompositionReferencesResponse, GetDocumentTypeByIdCompositionReferencesError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/{id}/composition-references'
        });
    }
    
    public static postDocumentTypeByIdCopy<ThrowOnError extends boolean = false>(options: Options<PostDocumentTypeByIdCopyData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentTypeByIdCopyResponse, PostDocumentTypeByIdCopyError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/{id}/copy'
        });
    }
    
    public static getDocumentTypeByIdExport<ThrowOnError extends boolean = false>(options: Options<GetDocumentTypeByIdExportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentTypeByIdExportResponse, GetDocumentTypeByIdExportError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/{id}/export'
        });
    }
    
    public static putDocumentTypeByIdImport<ThrowOnError extends boolean = false>(options: Options<PutDocumentTypeByIdImportData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentTypeByIdImportResponse, PutDocumentTypeByIdImportError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/{id}/import'
        });
    }
    
    public static putDocumentTypeByIdMove<ThrowOnError extends boolean = false>(options: Options<PutDocumentTypeByIdMoveData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentTypeByIdMoveResponse, PutDocumentTypeByIdMoveError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/{id}/move'
        });
    }
    
    public static getDocumentTypeAllowedAtRoot<ThrowOnError extends boolean = false>(options?: Options<GetDocumentTypeAllowedAtRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentTypeAllowedAtRootResponse, GetDocumentTypeAllowedAtRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/allowed-at-root'
        });
    }
    
    public static postDocumentTypeAvailableCompositions<ThrowOnError extends boolean = false>(options?: Options<PostDocumentTypeAvailableCompositionsData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentTypeAvailableCompositionsResponse, PostDocumentTypeAvailableCompositionsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/available-compositions'
        });
    }
    
    public static getDocumentTypeConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentTypeConfigurationResponse, GetDocumentTypeConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/configuration'
        });
    }
    
    public static postDocumentTypeFolder<ThrowOnError extends boolean = false>(options?: Options<PostDocumentTypeFolderData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentTypeFolderResponse, PostDocumentTypeFolderError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/folder'
        });
    }
    
    public static getDocumentTypeFolderById<ThrowOnError extends boolean = false>(options: Options<GetDocumentTypeFolderByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentTypeFolderByIdResponse, GetDocumentTypeFolderByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/folder/{id}'
        });
    }
    
    public static deleteDocumentTypeFolderById<ThrowOnError extends boolean = false>(options: Options<DeleteDocumentTypeFolderByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteDocumentTypeFolderByIdResponse, DeleteDocumentTypeFolderByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/folder/{id}'
        });
    }
    
    public static putDocumentTypeFolderById<ThrowOnError extends boolean = false>(options: Options<PutDocumentTypeFolderByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentTypeFolderByIdResponse, PutDocumentTypeFolderByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/folder/{id}'
        });
    }
    
    public static postDocumentTypeImport<ThrowOnError extends boolean = false>(options?: Options<PostDocumentTypeImportData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentTypeImportResponse, PostDocumentTypeImportError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-type/import'
        });
    }
    
    public static getItemDocumentType<ThrowOnError extends boolean = false>(options?: Options<GetItemDocumentTypeData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemDocumentTypeResponse, GetItemDocumentTypeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/document-type'
        });
    }
    
    public static getItemDocumentTypeSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemDocumentTypeSearchData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemDocumentTypeSearchResponse, GetItemDocumentTypeSearchError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/document-type/search'
        });
    }
    
    public static getTreeDocumentTypeAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentTypeAncestorsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDocumentTypeAncestorsResponse, GetTreeDocumentTypeAncestorsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/document-type/ancestors'
        });
    }
    
    public static getTreeDocumentTypeChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentTypeChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDocumentTypeChildrenResponse, GetTreeDocumentTypeChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/document-type/children'
        });
    }
    
    public static getTreeDocumentTypeRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentTypeRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDocumentTypeRootResponse, GetTreeDocumentTypeRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/document-type/root'
        });
    }
    
}

export class DocumentVersionService {
    public static getDocumentVersion<ThrowOnError extends boolean = false>(options: Options<GetDocumentVersionData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentVersionResponse, GetDocumentVersionError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-version'
        });
    }
    
    public static getDocumentVersionById<ThrowOnError extends boolean = false>(options: Options<GetDocumentVersionByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentVersionByIdResponse, GetDocumentVersionByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-version/{id}'
        });
    }
    
    public static putDocumentVersionByIdPreventCleanup<ThrowOnError extends boolean = false>(options: Options<PutDocumentVersionByIdPreventCleanupData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentVersionByIdPreventCleanupResponse, PutDocumentVersionByIdPreventCleanupError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-version/{id}/prevent-cleanup'
        });
    }
    
    public static postDocumentVersionByIdRollback<ThrowOnError extends boolean = false>(options: Options<PostDocumentVersionByIdRollbackData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentVersionByIdRollbackResponse, PostDocumentVersionByIdRollbackError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document-version/{id}/rollback'
        });
    }
    
}

export class DocumentService {
    public static getCollectionDocumentById<ThrowOnError extends boolean = false>(options: Options<GetCollectionDocumentByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetCollectionDocumentByIdResponse, GetCollectionDocumentByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/collection/document/{id}'
        });
    }
    
    public static postDocument<ThrowOnError extends boolean = false>(options?: Options<PostDocumentData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentResponse, PostDocumentError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document'
        });
    }
    
    public static getDocumentById<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentByIdResponse, GetDocumentByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}'
        });
    }
    
    public static deleteDocumentById<ThrowOnError extends boolean = false>(options: Options<DeleteDocumentByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteDocumentByIdResponse, DeleteDocumentByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}'
        });
    }
    
    public static putDocumentById<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentByIdResponse, PutDocumentByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}'
        });
    }
    
    public static getDocumentByIdAuditLog<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdAuditLogData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentByIdAuditLogResponse, GetDocumentByIdAuditLogError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/audit-log'
        });
    }
    
    public static postDocumentByIdCopy<ThrowOnError extends boolean = false>(options: Options<PostDocumentByIdCopyData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentByIdCopyResponse, PostDocumentByIdCopyError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/copy'
        });
    }
    
    public static getDocumentByIdDomains<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdDomainsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentByIdDomainsResponse, GetDocumentByIdDomainsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/domains'
        });
    }
    
    public static putDocumentByIdDomains<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdDomainsData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentByIdDomainsResponse, PutDocumentByIdDomainsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/domains'
        });
    }
    
    public static putDocumentByIdMove<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdMoveData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentByIdMoveResponse, PutDocumentByIdMoveError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/move'
        });
    }
    
    public static putDocumentByIdMoveToRecycleBin<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdMoveToRecycleBinData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentByIdMoveToRecycleBinResponse, PutDocumentByIdMoveToRecycleBinError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/move-to-recycle-bin'
        });
    }
    
    public static getDocumentByIdNotifications<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdNotificationsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentByIdNotificationsResponse, GetDocumentByIdNotificationsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/notifications'
        });
    }
    
    public static putDocumentByIdNotifications<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdNotificationsData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentByIdNotificationsResponse, PutDocumentByIdNotificationsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/notifications'
        });
    }
    
    public static postDocumentByIdPublicAccess<ThrowOnError extends boolean = false>(options: Options<PostDocumentByIdPublicAccessData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentByIdPublicAccessResponse, PostDocumentByIdPublicAccessError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/public-access'
        });
    }
    
    public static deleteDocumentByIdPublicAccess<ThrowOnError extends boolean = false>(options: Options<DeleteDocumentByIdPublicAccessData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteDocumentByIdPublicAccessResponse, DeleteDocumentByIdPublicAccessError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/public-access'
        });
    }
    
    public static getDocumentByIdPublicAccess<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdPublicAccessData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentByIdPublicAccessResponse, GetDocumentByIdPublicAccessError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/public-access'
        });
    }
    
    public static putDocumentByIdPublicAccess<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdPublicAccessData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentByIdPublicAccessResponse, PutDocumentByIdPublicAccessError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/public-access'
        });
    }
    
    public static putDocumentByIdPublish<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdPublishData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentByIdPublishResponse, PutDocumentByIdPublishError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/publish'
        });
    }
    
    public static putDocumentByIdPublishWithDescendants<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdPublishWithDescendantsData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentByIdPublishWithDescendantsResponse, PutDocumentByIdPublishWithDescendantsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/publish-with-descendants'
        });
    }
    
    public static getDocumentByIdPublished<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdPublishedData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentByIdPublishedResponse, GetDocumentByIdPublishedError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/published'
        });
    }
    
    public static getDocumentByIdReferencedBy<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdReferencedByData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentByIdReferencedByResponse, GetDocumentByIdReferencedByError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/referenced-by'
        });
    }
    
    public static getDocumentByIdReferencedDescendants<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdReferencedDescendantsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentByIdReferencedDescendantsResponse, GetDocumentByIdReferencedDescendantsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/referenced-descendants'
        });
    }
    
    public static putDocumentByIdUnpublish<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdUnpublishData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentByIdUnpublishResponse, PutDocumentByIdUnpublishError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/unpublish'
        });
    }
    
    /**
     * @deprecated
     */
    public static putDocumentByIdValidate<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdValidateData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentByIdValidateResponse, PutDocumentByIdValidateError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/{id}/validate'
        });
    }
    
    public static putUmbracoManagementApiV11DocumentByIdValidate11<ThrowOnError extends boolean = false>(options: Options<PutUmbracoManagementApiV11DocumentByIdValidate11Data, ThrowOnError>) {
        return (options?.client ?? client).put<PutUmbracoManagementApiV11DocumentByIdValidate11Response, PutUmbracoManagementApiV11DocumentByIdValidate11Error, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1.1/document/{id}/validate'
        });
    }
    
    public static getDocumentAreReferenced<ThrowOnError extends boolean = false>(options?: Options<GetDocumentAreReferencedData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentAreReferencedResponse, GetDocumentAreReferencedError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/are-referenced'
        });
    }
    
    public static getDocumentConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentConfigurationResponse, GetDocumentConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/configuration'
        });
    }
    
    public static getUmbracoManagementApiV1DocumentPublicAccessDefaultPages<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetUmbracoManagementApiV1DocumentPublicAccessDefaultPagesResponse, GetUmbracoManagementApiV1DocumentPublicAccessDefaultPagesError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/public-access/defaultPages'
        });
    }
    
    public static putDocumentSort<ThrowOnError extends boolean = false>(options?: Options<PutDocumentSortData, ThrowOnError>) {
        return (options?.client ?? client).put<PutDocumentSortResponse, PutDocumentSortError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/sort'
        });
    }
    
    public static getDocumentUrls<ThrowOnError extends boolean = false>(options?: Options<GetDocumentUrlsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDocumentUrlsResponse, GetDocumentUrlsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/urls'
        });
    }
    
    public static postDocumentValidate<ThrowOnError extends boolean = false>(options?: Options<PostDocumentValidateData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDocumentValidateResponse, PostDocumentValidateError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/document/validate'
        });
    }
    
    public static getItemDocument<ThrowOnError extends boolean = false>(options?: Options<GetItemDocumentData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemDocumentResponse, GetItemDocumentError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/document'
        });
    }
    
    public static getItemDocumentSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemDocumentSearchData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemDocumentSearchResponse, GetItemDocumentSearchError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/document/search'
        });
    }
    
    public static deleteRecycleBinDocument<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteRecycleBinDocumentResponse, DeleteRecycleBinDocumentError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/recycle-bin/document'
        });
    }
    
    public static deleteRecycleBinDocumentById<ThrowOnError extends boolean = false>(options: Options<DeleteRecycleBinDocumentByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteRecycleBinDocumentByIdResponse, DeleteRecycleBinDocumentByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/recycle-bin/document/{id}'
        });
    }
    
    public static getRecycleBinDocumentByIdOriginalParent<ThrowOnError extends boolean = false>(options: Options<GetRecycleBinDocumentByIdOriginalParentData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRecycleBinDocumentByIdOriginalParentResponse, GetRecycleBinDocumentByIdOriginalParentError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/recycle-bin/document/{id}/original-parent'
        });
    }
    
    public static putRecycleBinDocumentByIdRestore<ThrowOnError extends boolean = false>(options: Options<PutRecycleBinDocumentByIdRestoreData, ThrowOnError>) {
        return (options?.client ?? client).put<PutRecycleBinDocumentByIdRestoreResponse, PutRecycleBinDocumentByIdRestoreError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/recycle-bin/document/{id}/restore'
        });
    }
    
    public static getRecycleBinDocumentChildren<ThrowOnError extends boolean = false>(options?: Options<GetRecycleBinDocumentChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRecycleBinDocumentChildrenResponse, GetRecycleBinDocumentChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/recycle-bin/document/children'
        });
    }
    
    public static getRecycleBinDocumentRoot<ThrowOnError extends boolean = false>(options?: Options<GetRecycleBinDocumentRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRecycleBinDocumentRootResponse, GetRecycleBinDocumentRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/recycle-bin/document/root'
        });
    }
    
    public static getTreeDocumentAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentAncestorsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDocumentAncestorsResponse, GetTreeDocumentAncestorsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/document/ancestors'
        });
    }
    
    public static getTreeDocumentChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDocumentChildrenResponse, GetTreeDocumentChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/document/children'
        });
    }
    
    public static getTreeDocumentRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeDocumentRootResponse, GetTreeDocumentRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/document/root'
        });
    }
    
}

export class DynamicRootService {
    public static postDynamicRootQuery<ThrowOnError extends boolean = false>(options?: Options<PostDynamicRootQueryData, ThrowOnError>) {
        return (options?.client ?? client).post<PostDynamicRootQueryResponse, PostDynamicRootQueryError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/dynamic-root/query'
        });
    }
    
    public static getDynamicRootSteps<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetDynamicRootStepsResponse, GetDynamicRootStepsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/dynamic-root/steps'
        });
    }
    
}

export class HealthCheckService {
    public static getHealthCheckGroup<ThrowOnError extends boolean = false>(options?: Options<GetHealthCheckGroupData, ThrowOnError>) {
        return (options?.client ?? client).get<GetHealthCheckGroupResponse, GetHealthCheckGroupError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/health-check-group'
        });
    }
    
    public static getHealthCheckGroupByName<ThrowOnError extends boolean = false>(options: Options<GetHealthCheckGroupByNameData, ThrowOnError>) {
        return (options?.client ?? client).get<GetHealthCheckGroupByNameResponse, GetHealthCheckGroupByNameError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/health-check-group/{name}'
        });
    }
    
    public static postHealthCheckGroupByNameCheck<ThrowOnError extends boolean = false>(options: Options<PostHealthCheckGroupByNameCheckData, ThrowOnError>) {
        return (options?.client ?? client).post<PostHealthCheckGroupByNameCheckResponse, PostHealthCheckGroupByNameCheckError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/health-check-group/{name}/check'
        });
    }
    
    public static postHealthCheckExecuteAction<ThrowOnError extends boolean = false>(options?: Options<PostHealthCheckExecuteActionData, ThrowOnError>) {
        return (options?.client ?? client).post<PostHealthCheckExecuteActionResponse, PostHealthCheckExecuteActionError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/health-check/execute-action'
        });
    }
    
}

export class HelpService {
    public static getHelp<ThrowOnError extends boolean = false>(options?: Options<GetHelpData, ThrowOnError>) {
        return (options?.client ?? client).get<GetHelpResponse, GetHelpError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/help'
        });
    }
    
}

export class ImagingService {
    public static getImagingResizeUrls<ThrowOnError extends boolean = false>(options?: Options<GetImagingResizeUrlsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetImagingResizeUrlsResponse, GetImagingResizeUrlsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/imaging/resize/urls'
        });
    }
    
}

export class ImportService {
    public static getImportAnalyze<ThrowOnError extends boolean = false>(options?: Options<GetImportAnalyzeData, ThrowOnError>) {
        return (options?.client ?? client).get<GetImportAnalyzeResponse, GetImportAnalyzeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/import/analyze'
        });
    }
    
}

export class IndexerService {
    public static getIndexer<ThrowOnError extends boolean = false>(options?: Options<GetIndexerData, ThrowOnError>) {
        return (options?.client ?? client).get<GetIndexerResponse, GetIndexerError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/indexer'
        });
    }
    
    public static getIndexerByIndexName<ThrowOnError extends boolean = false>(options: Options<GetIndexerByIndexNameData, ThrowOnError>) {
        return (options?.client ?? client).get<GetIndexerByIndexNameResponse, GetIndexerByIndexNameError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/indexer/{indexName}'
        });
    }
    
    public static postIndexerByIndexNameRebuild<ThrowOnError extends boolean = false>(options: Options<PostIndexerByIndexNameRebuildData, ThrowOnError>) {
        return (options?.client ?? client).post<PostIndexerByIndexNameRebuildResponse, PostIndexerByIndexNameRebuildError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/indexer/{indexName}/rebuild'
        });
    }
    
}

export class InstallService {
    public static getInstallSettings<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetInstallSettingsResponse, GetInstallSettingsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/install/settings'
        });
    }
    
    public static postInstallSetup<ThrowOnError extends boolean = false>(options?: Options<PostInstallSetupData, ThrowOnError>) {
        return (options?.client ?? client).post<PostInstallSetupResponse, PostInstallSetupError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/install/setup'
        });
    }
    
    public static postInstallValidateDatabase<ThrowOnError extends boolean = false>(options?: Options<PostInstallValidateDatabaseData, ThrowOnError>) {
        return (options?.client ?? client).post<PostInstallValidateDatabaseResponse, PostInstallValidateDatabaseError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/install/validate-database'
        });
    }
    
}

export class LanguageService {
    public static getItemLanguage<ThrowOnError extends boolean = false>(options?: Options<GetItemLanguageData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemLanguageResponse, GetItemLanguageError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/language'
        });
    }
    
    public static getItemLanguageDefault<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemLanguageDefaultResponse, GetItemLanguageDefaultError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/language/default'
        });
    }
    
    public static getLanguage<ThrowOnError extends boolean = false>(options?: Options<GetLanguageData, ThrowOnError>) {
        return (options?.client ?? client).get<GetLanguageResponse, GetLanguageError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/language'
        });
    }
    
    public static postLanguage<ThrowOnError extends boolean = false>(options?: Options<PostLanguageData, ThrowOnError>) {
        return (options?.client ?? client).post<PostLanguageResponse, PostLanguageError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/language'
        });
    }
    
    public static getLanguageByIsoCode<ThrowOnError extends boolean = false>(options: Options<GetLanguageByIsoCodeData, ThrowOnError>) {
        return (options?.client ?? client).get<GetLanguageByIsoCodeResponse, GetLanguageByIsoCodeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/language/{isoCode}'
        });
    }
    
    public static deleteLanguageByIsoCode<ThrowOnError extends boolean = false>(options: Options<DeleteLanguageByIsoCodeData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteLanguageByIsoCodeResponse, DeleteLanguageByIsoCodeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/language/{isoCode}'
        });
    }
    
    public static putLanguageByIsoCode<ThrowOnError extends boolean = false>(options: Options<PutLanguageByIsoCodeData, ThrowOnError>) {
        return (options?.client ?? client).put<PutLanguageByIsoCodeResponse, PutLanguageByIsoCodeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/language/{isoCode}'
        });
    }
    
}

export class LogViewerService {
    public static getLogViewerLevel<ThrowOnError extends boolean = false>(options?: Options<GetLogViewerLevelData, ThrowOnError>) {
        return (options?.client ?? client).get<GetLogViewerLevelResponse, GetLogViewerLevelError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/log-viewer/level'
        });
    }
    
    public static getLogViewerLevelCount<ThrowOnError extends boolean = false>(options?: Options<GetLogViewerLevelCountData, ThrowOnError>) {
        return (options?.client ?? client).get<GetLogViewerLevelCountResponse, GetLogViewerLevelCountError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/log-viewer/level-count'
        });
    }
    
    public static getLogViewerLog<ThrowOnError extends boolean = false>(options?: Options<GetLogViewerLogData, ThrowOnError>) {
        return (options?.client ?? client).get<GetLogViewerLogResponse, GetLogViewerLogError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/log-viewer/log'
        });
    }
    
    public static getLogViewerMessageTemplate<ThrowOnError extends boolean = false>(options?: Options<GetLogViewerMessageTemplateData, ThrowOnError>) {
        return (options?.client ?? client).get<GetLogViewerMessageTemplateResponse, GetLogViewerMessageTemplateError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/log-viewer/message-template'
        });
    }
    
    public static getLogViewerSavedSearch<ThrowOnError extends boolean = false>(options?: Options<GetLogViewerSavedSearchData, ThrowOnError>) {
        return (options?.client ?? client).get<GetLogViewerSavedSearchResponse, GetLogViewerSavedSearchError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/log-viewer/saved-search'
        });
    }
    
    public static postLogViewerSavedSearch<ThrowOnError extends boolean = false>(options?: Options<PostLogViewerSavedSearchData, ThrowOnError>) {
        return (options?.client ?? client).post<PostLogViewerSavedSearchResponse, PostLogViewerSavedSearchError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/log-viewer/saved-search'
        });
    }
    
    public static getLogViewerSavedSearchByName<ThrowOnError extends boolean = false>(options: Options<GetLogViewerSavedSearchByNameData, ThrowOnError>) {
        return (options?.client ?? client).get<GetLogViewerSavedSearchByNameResponse, GetLogViewerSavedSearchByNameError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/log-viewer/saved-search/{name}'
        });
    }
    
    public static deleteLogViewerSavedSearchByName<ThrowOnError extends boolean = false>(options: Options<DeleteLogViewerSavedSearchByNameData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteLogViewerSavedSearchByNameResponse, DeleteLogViewerSavedSearchByNameError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/log-viewer/saved-search/{name}'
        });
    }
    
    public static getLogViewerValidateLogsSize<ThrowOnError extends boolean = false>(options?: Options<GetLogViewerValidateLogsSizeData, ThrowOnError>) {
        return (options?.client ?? client).get<GetLogViewerValidateLogsSizeResponse, GetLogViewerValidateLogsSizeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/log-viewer/validate-logs-size'
        });
    }
    
}

export class ManifestService {
    public static getManifestManifest<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetManifestManifestResponse, GetManifestManifestError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/manifest/manifest'
        });
    }
    
    public static getManifestManifestPrivate<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetManifestManifestPrivateResponse, GetManifestManifestPrivateError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/manifest/manifest/private'
        });
    }
    
    public static getManifestManifestPublic<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetManifestManifestPublicResponse, GetManifestManifestPublicError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/manifest/manifest/public'
        });
    }
    
}

export class MediaTypeService {
    public static getItemMediaType<ThrowOnError extends boolean = false>(options?: Options<GetItemMediaTypeData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemMediaTypeResponse, GetItemMediaTypeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/media-type'
        });
    }
    
    public static getItemMediaTypeAllowed<ThrowOnError extends boolean = false>(options?: Options<GetItemMediaTypeAllowedData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemMediaTypeAllowedResponse, GetItemMediaTypeAllowedError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/media-type/allowed'
        });
    }
    
    public static getItemMediaTypeFolders<ThrowOnError extends boolean = false>(options?: Options<GetItemMediaTypeFoldersData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemMediaTypeFoldersResponse, GetItemMediaTypeFoldersError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/media-type/folders'
        });
    }
    
    public static getItemMediaTypeSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemMediaTypeSearchData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemMediaTypeSearchResponse, GetItemMediaTypeSearchError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/media-type/search'
        });
    }
    
    public static postMediaType<ThrowOnError extends boolean = false>(options?: Options<PostMediaTypeData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMediaTypeResponse, PostMediaTypeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type'
        });
    }
    
    public static getMediaTypeById<ThrowOnError extends boolean = false>(options: Options<GetMediaTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaTypeByIdResponse, GetMediaTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/{id}'
        });
    }
    
    public static deleteMediaTypeById<ThrowOnError extends boolean = false>(options: Options<DeleteMediaTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteMediaTypeByIdResponse, DeleteMediaTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/{id}'
        });
    }
    
    public static putMediaTypeById<ThrowOnError extends boolean = false>(options: Options<PutMediaTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMediaTypeByIdResponse, PutMediaTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/{id}'
        });
    }
    
    public static getMediaTypeByIdAllowedChildren<ThrowOnError extends boolean = false>(options: Options<GetMediaTypeByIdAllowedChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaTypeByIdAllowedChildrenResponse, GetMediaTypeByIdAllowedChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/{id}/allowed-children'
        });
    }
    
    public static getMediaTypeByIdCompositionReferences<ThrowOnError extends boolean = false>(options: Options<GetMediaTypeByIdCompositionReferencesData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaTypeByIdCompositionReferencesResponse, GetMediaTypeByIdCompositionReferencesError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/{id}/composition-references'
        });
    }
    
    public static postMediaTypeByIdCopy<ThrowOnError extends boolean = false>(options: Options<PostMediaTypeByIdCopyData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMediaTypeByIdCopyResponse, PostMediaTypeByIdCopyError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/{id}/copy'
        });
    }
    
    public static getMediaTypeByIdExport<ThrowOnError extends boolean = false>(options: Options<GetMediaTypeByIdExportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaTypeByIdExportResponse, GetMediaTypeByIdExportError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/{id}/export'
        });
    }
    
    public static putMediaTypeByIdImport<ThrowOnError extends boolean = false>(options: Options<PutMediaTypeByIdImportData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMediaTypeByIdImportResponse, PutMediaTypeByIdImportError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/{id}/import'
        });
    }
    
    public static putMediaTypeByIdMove<ThrowOnError extends boolean = false>(options: Options<PutMediaTypeByIdMoveData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMediaTypeByIdMoveResponse, PutMediaTypeByIdMoveError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/{id}/move'
        });
    }
    
    public static getMediaTypeAllowedAtRoot<ThrowOnError extends boolean = false>(options?: Options<GetMediaTypeAllowedAtRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaTypeAllowedAtRootResponse, GetMediaTypeAllowedAtRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/allowed-at-root'
        });
    }
    
    public static postMediaTypeAvailableCompositions<ThrowOnError extends boolean = false>(options?: Options<PostMediaTypeAvailableCompositionsData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMediaTypeAvailableCompositionsResponse, PostMediaTypeAvailableCompositionsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/available-compositions'
        });
    }
    
    public static getMediaTypeConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaTypeConfigurationResponse, GetMediaTypeConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/configuration'
        });
    }
    
    public static postMediaTypeFolder<ThrowOnError extends boolean = false>(options?: Options<PostMediaTypeFolderData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMediaTypeFolderResponse, PostMediaTypeFolderError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/folder'
        });
    }
    
    public static getMediaTypeFolderById<ThrowOnError extends boolean = false>(options: Options<GetMediaTypeFolderByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaTypeFolderByIdResponse, GetMediaTypeFolderByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/folder/{id}'
        });
    }
    
    public static deleteMediaTypeFolderById<ThrowOnError extends boolean = false>(options: Options<DeleteMediaTypeFolderByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteMediaTypeFolderByIdResponse, DeleteMediaTypeFolderByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/folder/{id}'
        });
    }
    
    public static putMediaTypeFolderById<ThrowOnError extends boolean = false>(options: Options<PutMediaTypeFolderByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMediaTypeFolderByIdResponse, PutMediaTypeFolderByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/folder/{id}'
        });
    }
    
    public static postMediaTypeImport<ThrowOnError extends boolean = false>(options?: Options<PostMediaTypeImportData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMediaTypeImportResponse, PostMediaTypeImportError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media-type/import'
        });
    }
    
    public static getTreeMediaTypeAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeMediaTypeAncestorsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeMediaTypeAncestorsResponse, GetTreeMediaTypeAncestorsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/media-type/ancestors'
        });
    }
    
    public static getTreeMediaTypeChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeMediaTypeChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeMediaTypeChildrenResponse, GetTreeMediaTypeChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/media-type/children'
        });
    }
    
    public static getTreeMediaTypeRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeMediaTypeRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeMediaTypeRootResponse, GetTreeMediaTypeRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/media-type/root'
        });
    }
    
}

export class MediaService {
    public static getCollectionMedia<ThrowOnError extends boolean = false>(options?: Options<GetCollectionMediaData, ThrowOnError>) {
        return (options?.client ?? client).get<GetCollectionMediaResponse, GetCollectionMediaError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/collection/media'
        });
    }
    
    public static getItemMedia<ThrowOnError extends boolean = false>(options?: Options<GetItemMediaData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemMediaResponse, GetItemMediaError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/media'
        });
    }
    
    public static getItemMediaSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemMediaSearchData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemMediaSearchResponse, GetItemMediaSearchError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/media/search'
        });
    }
    
    public static postMedia<ThrowOnError extends boolean = false>(options?: Options<PostMediaData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMediaResponse, PostMediaError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media'
        });
    }
    
    public static getMediaById<ThrowOnError extends boolean = false>(options: Options<GetMediaByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaByIdResponse, GetMediaByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/{id}'
        });
    }
    
    public static deleteMediaById<ThrowOnError extends boolean = false>(options: Options<DeleteMediaByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteMediaByIdResponse, DeleteMediaByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/{id}'
        });
    }
    
    public static putMediaById<ThrowOnError extends boolean = false>(options: Options<PutMediaByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMediaByIdResponse, PutMediaByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/{id}'
        });
    }
    
    public static getMediaByIdAuditLog<ThrowOnError extends boolean = false>(options: Options<GetMediaByIdAuditLogData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaByIdAuditLogResponse, GetMediaByIdAuditLogError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/{id}/audit-log'
        });
    }
    
    public static putMediaByIdMove<ThrowOnError extends boolean = false>(options: Options<PutMediaByIdMoveData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMediaByIdMoveResponse, PutMediaByIdMoveError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/{id}/move'
        });
    }
    
    public static putMediaByIdMoveToRecycleBin<ThrowOnError extends boolean = false>(options: Options<PutMediaByIdMoveToRecycleBinData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMediaByIdMoveToRecycleBinResponse, PutMediaByIdMoveToRecycleBinError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/{id}/move-to-recycle-bin'
        });
    }
    
    public static getMediaByIdReferencedBy<ThrowOnError extends boolean = false>(options: Options<GetMediaByIdReferencedByData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaByIdReferencedByResponse, GetMediaByIdReferencedByError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/{id}/referenced-by'
        });
    }
    
    public static getMediaByIdReferencedDescendants<ThrowOnError extends boolean = false>(options: Options<GetMediaByIdReferencedDescendantsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaByIdReferencedDescendantsResponse, GetMediaByIdReferencedDescendantsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/{id}/referenced-descendants'
        });
    }
    
    public static putMediaByIdValidate<ThrowOnError extends boolean = false>(options: Options<PutMediaByIdValidateData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMediaByIdValidateResponse, PutMediaByIdValidateError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/{id}/validate'
        });
    }
    
    public static getMediaAreReferenced<ThrowOnError extends boolean = false>(options?: Options<GetMediaAreReferencedData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaAreReferencedResponse, GetMediaAreReferencedError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/are-referenced'
        });
    }
    
    public static getMediaConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaConfigurationResponse, GetMediaConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/configuration'
        });
    }
    
    public static putMediaSort<ThrowOnError extends boolean = false>(options?: Options<PutMediaSortData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMediaSortResponse, PutMediaSortError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/sort'
        });
    }
    
    public static getMediaUrls<ThrowOnError extends boolean = false>(options?: Options<GetMediaUrlsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMediaUrlsResponse, GetMediaUrlsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/urls'
        });
    }
    
    public static postMediaValidate<ThrowOnError extends boolean = false>(options?: Options<PostMediaValidateData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMediaValidateResponse, PostMediaValidateError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/media/validate'
        });
    }
    
    public static deleteRecycleBinMedia<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteRecycleBinMediaResponse, DeleteRecycleBinMediaError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/recycle-bin/media'
        });
    }
    
    public static deleteRecycleBinMediaById<ThrowOnError extends boolean = false>(options: Options<DeleteRecycleBinMediaByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteRecycleBinMediaByIdResponse, DeleteRecycleBinMediaByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/recycle-bin/media/{id}'
        });
    }
    
    public static getRecycleBinMediaByIdOriginalParent<ThrowOnError extends boolean = false>(options: Options<GetRecycleBinMediaByIdOriginalParentData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRecycleBinMediaByIdOriginalParentResponse, GetRecycleBinMediaByIdOriginalParentError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/recycle-bin/media/{id}/original-parent'
        });
    }
    
    public static putRecycleBinMediaByIdRestore<ThrowOnError extends boolean = false>(options: Options<PutRecycleBinMediaByIdRestoreData, ThrowOnError>) {
        return (options?.client ?? client).put<PutRecycleBinMediaByIdRestoreResponse, PutRecycleBinMediaByIdRestoreError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/recycle-bin/media/{id}/restore'
        });
    }
    
    public static getRecycleBinMediaChildren<ThrowOnError extends boolean = false>(options?: Options<GetRecycleBinMediaChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRecycleBinMediaChildrenResponse, GetRecycleBinMediaChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/recycle-bin/media/children'
        });
    }
    
    public static getRecycleBinMediaRoot<ThrowOnError extends boolean = false>(options?: Options<GetRecycleBinMediaRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRecycleBinMediaRootResponse, GetRecycleBinMediaRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/recycle-bin/media/root'
        });
    }
    
    public static getTreeMediaAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeMediaAncestorsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeMediaAncestorsResponse, GetTreeMediaAncestorsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/media/ancestors'
        });
    }
    
    public static getTreeMediaChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeMediaChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeMediaChildrenResponse, GetTreeMediaChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/media/children'
        });
    }
    
    public static getTreeMediaRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeMediaRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeMediaRootResponse, GetTreeMediaRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/media/root'
        });
    }
    
}

export class MemberGroupService {
    public static getItemMemberGroup<ThrowOnError extends boolean = false>(options?: Options<GetItemMemberGroupData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemMemberGroupResponse, GetItemMemberGroupError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/member-group'
        });
    }
    
    public static getMemberGroup<ThrowOnError extends boolean = false>(options?: Options<GetMemberGroupData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMemberGroupResponse, GetMemberGroupError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-group'
        });
    }
    
    public static postMemberGroup<ThrowOnError extends boolean = false>(options?: Options<PostMemberGroupData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMemberGroupResponse, PostMemberGroupError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-group'
        });
    }
    
    public static getMemberGroupById<ThrowOnError extends boolean = false>(options: Options<GetMemberGroupByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMemberGroupByIdResponse, GetMemberGroupByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-group/{id}'
        });
    }
    
    public static deleteMemberGroupById<ThrowOnError extends boolean = false>(options: Options<DeleteMemberGroupByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteMemberGroupByIdResponse, DeleteMemberGroupByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-group/{id}'
        });
    }
    
    public static putMemberGroupById<ThrowOnError extends boolean = false>(options: Options<PutMemberGroupByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMemberGroupByIdResponse, PutMemberGroupByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-group/{id}'
        });
    }
    
    public static getTreeMemberGroupRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeMemberGroupRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeMemberGroupRootResponse, GetTreeMemberGroupRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/member-group/root'
        });
    }
    
}

export class MemberTypeService {
    public static getItemMemberType<ThrowOnError extends boolean = false>(options?: Options<GetItemMemberTypeData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemMemberTypeResponse, GetItemMemberTypeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/member-type'
        });
    }
    
    public static getItemMemberTypeSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemMemberTypeSearchData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemMemberTypeSearchResponse, GetItemMemberTypeSearchError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/member-type/search'
        });
    }
    
    public static postMemberType<ThrowOnError extends boolean = false>(options?: Options<PostMemberTypeData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMemberTypeResponse, PostMemberTypeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-type'
        });
    }
    
    public static getMemberTypeById<ThrowOnError extends boolean = false>(options: Options<GetMemberTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMemberTypeByIdResponse, GetMemberTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-type/{id}'
        });
    }
    
    public static deleteMemberTypeById<ThrowOnError extends boolean = false>(options: Options<DeleteMemberTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteMemberTypeByIdResponse, DeleteMemberTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-type/{id}'
        });
    }
    
    public static putMemberTypeById<ThrowOnError extends boolean = false>(options: Options<PutMemberTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMemberTypeByIdResponse, PutMemberTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-type/{id}'
        });
    }
    
    public static getMemberTypeByIdCompositionReferences<ThrowOnError extends boolean = false>(options: Options<GetMemberTypeByIdCompositionReferencesData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMemberTypeByIdCompositionReferencesResponse, GetMemberTypeByIdCompositionReferencesError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-type/{id}/composition-references'
        });
    }
    
    public static postMemberTypeByIdCopy<ThrowOnError extends boolean = false>(options: Options<PostMemberTypeByIdCopyData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMemberTypeByIdCopyResponse, PostMemberTypeByIdCopyError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-type/{id}/copy'
        });
    }
    
    public static postMemberTypeAvailableCompositions<ThrowOnError extends boolean = false>(options?: Options<PostMemberTypeAvailableCompositionsData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMemberTypeAvailableCompositionsResponse, PostMemberTypeAvailableCompositionsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-type/available-compositions'
        });
    }
    
    public static getMemberTypeConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetMemberTypeConfigurationResponse, GetMemberTypeConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member-type/configuration'
        });
    }
    
    public static getTreeMemberTypeRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeMemberTypeRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeMemberTypeRootResponse, GetTreeMemberTypeRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/member-type/root'
        });
    }
    
}

export class MemberService {
    public static getFilterMember<ThrowOnError extends boolean = false>(options?: Options<GetFilterMemberData, ThrowOnError>) {
        return (options?.client ?? client).get<GetFilterMemberResponse, GetFilterMemberError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/filter/member'
        });
    }
    
    public static getItemMember<ThrowOnError extends boolean = false>(options?: Options<GetItemMemberData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemMemberResponse, GetItemMemberError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/member'
        });
    }
    
    public static getItemMemberSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemMemberSearchData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemMemberSearchResponse, GetItemMemberSearchError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/member/search'
        });
    }
    
    public static postMember<ThrowOnError extends boolean = false>(options?: Options<PostMemberData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMemberResponse, PostMemberError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member'
        });
    }
    
    public static getMemberById<ThrowOnError extends boolean = false>(options: Options<GetMemberByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMemberByIdResponse, GetMemberByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member/{id}'
        });
    }
    
    public static deleteMemberById<ThrowOnError extends boolean = false>(options: Options<DeleteMemberByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteMemberByIdResponse, DeleteMemberByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member/{id}'
        });
    }
    
    public static putMemberById<ThrowOnError extends boolean = false>(options: Options<PutMemberByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMemberByIdResponse, PutMemberByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member/{id}'
        });
    }
    
    public static putMemberByIdValidate<ThrowOnError extends boolean = false>(options: Options<PutMemberByIdValidateData, ThrowOnError>) {
        return (options?.client ?? client).put<PutMemberByIdValidateResponse, PutMemberByIdValidateError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member/{id}/validate'
        });
    }
    
    public static getMemberConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetMemberConfigurationResponse, GetMemberConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member/configuration'
        });
    }
    
    public static postMemberValidate<ThrowOnError extends boolean = false>(options?: Options<PostMemberValidateData, ThrowOnError>) {
        return (options?.client ?? client).post<PostMemberValidateResponse, PostMemberValidateError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/member/validate'
        });
    }
    
}

export class ModelsBuilderService {
    public static postModelsBuilderBuild<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<PostModelsBuilderBuildResponse, PostModelsBuilderBuildError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/models-builder/build'
        });
    }
    
    public static getModelsBuilderDashboard<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetModelsBuilderDashboardResponse, GetModelsBuilderDashboardError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/models-builder/dashboard'
        });
    }
    
    public static getModelsBuilderStatus<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetModelsBuilderStatusResponse, GetModelsBuilderStatusError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/models-builder/status'
        });
    }
    
}

export class ObjectTypesService {
    public static getObjectTypes<ThrowOnError extends boolean = false>(options?: Options<GetObjectTypesData, ThrowOnError>) {
        return (options?.client ?? client).get<GetObjectTypesResponse, GetObjectTypesError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/object-types'
        });
    }
    
}

export class OEmbedService {
    public static getOembedQuery<ThrowOnError extends boolean = false>(options?: Options<GetOembedQueryData, ThrowOnError>) {
        return (options?.client ?? client).get<GetOembedQueryResponse, GetOembedQueryError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/oembed/query'
        });
    }
    
}

export class PackageService {
    public static postPackageByNameRunMigration<ThrowOnError extends boolean = false>(options: Options<PostPackageByNameRunMigrationData, ThrowOnError>) {
        return (options?.client ?? client).post<PostPackageByNameRunMigrationResponse, PostPackageByNameRunMigrationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/package/{name}/run-migration'
        });
    }
    
    public static getPackageConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetPackageConfigurationResponse, GetPackageConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/package/configuration'
        });
    }
    
    public static getPackageCreated<ThrowOnError extends boolean = false>(options?: Options<GetPackageCreatedData, ThrowOnError>) {
        return (options?.client ?? client).get<GetPackageCreatedResponse, GetPackageCreatedError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/package/created'
        });
    }
    
    public static postPackageCreated<ThrowOnError extends boolean = false>(options?: Options<PostPackageCreatedData, ThrowOnError>) {
        return (options?.client ?? client).post<PostPackageCreatedResponse, PostPackageCreatedError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/package/created'
        });
    }
    
    public static getPackageCreatedById<ThrowOnError extends boolean = false>(options: Options<GetPackageCreatedByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetPackageCreatedByIdResponse, GetPackageCreatedByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/package/created/{id}'
        });
    }
    
    public static deletePackageCreatedById<ThrowOnError extends boolean = false>(options: Options<DeletePackageCreatedByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeletePackageCreatedByIdResponse, DeletePackageCreatedByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/package/created/{id}'
        });
    }
    
    public static putPackageCreatedById<ThrowOnError extends boolean = false>(options: Options<PutPackageCreatedByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutPackageCreatedByIdResponse, PutPackageCreatedByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/package/created/{id}'
        });
    }
    
    public static getPackageCreatedByIdDownload<ThrowOnError extends boolean = false>(options: Options<GetPackageCreatedByIdDownloadData, ThrowOnError>) {
        return (options?.client ?? client).get<GetPackageCreatedByIdDownloadResponse, GetPackageCreatedByIdDownloadError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/package/created/{id}/download'
        });
    }
    
    public static getPackageMigrationStatus<ThrowOnError extends boolean = false>(options?: Options<GetPackageMigrationStatusData, ThrowOnError>) {
        return (options?.client ?? client).get<GetPackageMigrationStatusResponse, GetPackageMigrationStatusError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/package/migration-status'
        });
    }
    
}

export class PartialViewService {
    public static getItemPartialView<ThrowOnError extends boolean = false>(options?: Options<GetItemPartialViewData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemPartialViewResponse, GetItemPartialViewError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/partial-view'
        });
    }
    
    public static postPartialView<ThrowOnError extends boolean = false>(options?: Options<PostPartialViewData, ThrowOnError>) {
        return (options?.client ?? client).post<PostPartialViewResponse, PostPartialViewError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/partial-view'
        });
    }
    
    public static getPartialViewByPath<ThrowOnError extends boolean = false>(options: Options<GetPartialViewByPathData, ThrowOnError>) {
        return (options?.client ?? client).get<GetPartialViewByPathResponse, GetPartialViewByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/partial-view/{path}'
        });
    }
    
    public static deletePartialViewByPath<ThrowOnError extends boolean = false>(options: Options<DeletePartialViewByPathData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeletePartialViewByPathResponse, DeletePartialViewByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/partial-view/{path}'
        });
    }
    
    public static putPartialViewByPath<ThrowOnError extends boolean = false>(options: Options<PutPartialViewByPathData, ThrowOnError>) {
        return (options?.client ?? client).put<PutPartialViewByPathResponse, PutPartialViewByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/partial-view/{path}'
        });
    }
    
    public static putPartialViewByPathRename<ThrowOnError extends boolean = false>(options: Options<PutPartialViewByPathRenameData, ThrowOnError>) {
        return (options?.client ?? client).put<PutPartialViewByPathRenameResponse, PutPartialViewByPathRenameError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/partial-view/{path}/rename'
        });
    }
    
    public static postPartialViewFolder<ThrowOnError extends boolean = false>(options?: Options<PostPartialViewFolderData, ThrowOnError>) {
        return (options?.client ?? client).post<PostPartialViewFolderResponse, PostPartialViewFolderError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/partial-view/folder'
        });
    }
    
    public static getPartialViewFolderByPath<ThrowOnError extends boolean = false>(options: Options<GetPartialViewFolderByPathData, ThrowOnError>) {
        return (options?.client ?? client).get<GetPartialViewFolderByPathResponse, GetPartialViewFolderByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/partial-view/folder/{path}'
        });
    }
    
    public static deletePartialViewFolderByPath<ThrowOnError extends boolean = false>(options: Options<DeletePartialViewFolderByPathData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeletePartialViewFolderByPathResponse, DeletePartialViewFolderByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/partial-view/folder/{path}'
        });
    }
    
    public static getPartialViewSnippet<ThrowOnError extends boolean = false>(options?: Options<GetPartialViewSnippetData, ThrowOnError>) {
        return (options?.client ?? client).get<GetPartialViewSnippetResponse, GetPartialViewSnippetError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/partial-view/snippet'
        });
    }
    
    public static getPartialViewSnippetById<ThrowOnError extends boolean = false>(options: Options<GetPartialViewSnippetByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetPartialViewSnippetByIdResponse, GetPartialViewSnippetByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/partial-view/snippet/{id}'
        });
    }
    
    public static getTreePartialViewAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreePartialViewAncestorsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreePartialViewAncestorsResponse, GetTreePartialViewAncestorsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/partial-view/ancestors'
        });
    }
    
    public static getTreePartialViewChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreePartialViewChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreePartialViewChildrenResponse, GetTreePartialViewChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/partial-view/children'
        });
    }
    
    public static getTreePartialViewRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreePartialViewRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreePartialViewRootResponse, GetTreePartialViewRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/partial-view/root'
        });
    }
    
}

export class PreviewService {
    public static deletePreview<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).delete<DeletePreviewResponse, DeletePreviewError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/preview'
        });
    }
    
    public static postPreview<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<PostPreviewResponse, PostPreviewError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/preview'
        });
    }
    
}

export class ProfilingService {
    public static getProfilingStatus<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetProfilingStatusResponse, GetProfilingStatusError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/profiling/status'
        });
    }
    
    public static putProfilingStatus<ThrowOnError extends boolean = false>(options?: Options<PutProfilingStatusData, ThrowOnError>) {
        return (options?.client ?? client).put<PutProfilingStatusResponse, PutProfilingStatusError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/profiling/status'
        });
    }
    
}

export class PropertyTypeService {
    public static getPropertyTypeIsUsed<ThrowOnError extends boolean = false>(options?: Options<GetPropertyTypeIsUsedData, ThrowOnError>) {
        return (options?.client ?? client).get<GetPropertyTypeIsUsedResponse, GetPropertyTypeIsUsedError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/property-type/is-used'
        });
    }
    
}

export class PublishedCacheService {
    /**
     * @deprecated
     */
    public static postPublishedCacheCollect<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<void, unknown, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/published-cache/collect'
        });
    }
    
    public static postPublishedCacheRebuild<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<PostPublishedCacheRebuildResponse, PostPublishedCacheRebuildError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/published-cache/rebuild'
        });
    }
    
    public static postPublishedCacheReload<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<PostPublishedCacheReloadResponse, PostPublishedCacheReloadError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/published-cache/reload'
        });
    }
    
    /**
     * @deprecated
     */
    public static getPublishedCacheStatus<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<void, unknown, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/published-cache/status'
        });
    }
    
}

export class RedirectManagementService {
    public static getRedirectManagement<ThrowOnError extends boolean = false>(options?: Options<GetRedirectManagementData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRedirectManagementResponse, GetRedirectManagementError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/redirect-management'
        });
    }
    
    public static getRedirectManagementById<ThrowOnError extends boolean = false>(options: Options<GetRedirectManagementByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRedirectManagementByIdResponse, GetRedirectManagementByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/redirect-management/{id}'
        });
    }
    
    public static deleteRedirectManagementById<ThrowOnError extends boolean = false>(options: Options<DeleteRedirectManagementByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteRedirectManagementByIdResponse, DeleteRedirectManagementByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/redirect-management/{id}'
        });
    }
    
    public static getRedirectManagementStatus<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetRedirectManagementStatusResponse, GetRedirectManagementStatusError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/redirect-management/status'
        });
    }
    
    public static postRedirectManagementStatus<ThrowOnError extends boolean = false>(options?: Options<PostRedirectManagementStatusData, ThrowOnError>) {
        return (options?.client ?? client).post<PostRedirectManagementStatusResponse, PostRedirectManagementStatusError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/redirect-management/status'
        });
    }
    
}

export class RelationTypeService {
    public static getItemRelationType<ThrowOnError extends boolean = false>(options?: Options<GetItemRelationTypeData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemRelationTypeResponse, GetItemRelationTypeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/relation-type'
        });
    }
    
    public static getRelationType<ThrowOnError extends boolean = false>(options?: Options<GetRelationTypeData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRelationTypeResponse, GetRelationTypeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/relation-type'
        });
    }
    
    public static getRelationTypeById<ThrowOnError extends boolean = false>(options: Options<GetRelationTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRelationTypeByIdResponse, GetRelationTypeByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/relation-type/{id}'
        });
    }
    
}

export class RelationService {
    public static getRelationByRelationTypeId<ThrowOnError extends boolean = false>(options: Options<GetRelationByRelationTypeIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRelationByRelationTypeIdResponse, GetRelationByRelationTypeIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/relation/type/{id}'
        });
    }
    
}

export class ScriptService {
    public static getItemScript<ThrowOnError extends boolean = false>(options?: Options<GetItemScriptData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemScriptResponse, GetItemScriptError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/script'
        });
    }
    
    public static postScript<ThrowOnError extends boolean = false>(options?: Options<PostScriptData, ThrowOnError>) {
        return (options?.client ?? client).post<PostScriptResponse, PostScriptError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/script'
        });
    }
    
    public static getScriptByPath<ThrowOnError extends boolean = false>(options: Options<GetScriptByPathData, ThrowOnError>) {
        return (options?.client ?? client).get<GetScriptByPathResponse, GetScriptByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/script/{path}'
        });
    }
    
    public static deleteScriptByPath<ThrowOnError extends boolean = false>(options: Options<DeleteScriptByPathData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteScriptByPathResponse, DeleteScriptByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/script/{path}'
        });
    }
    
    public static putScriptByPath<ThrowOnError extends boolean = false>(options: Options<PutScriptByPathData, ThrowOnError>) {
        return (options?.client ?? client).put<PutScriptByPathResponse, PutScriptByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/script/{path}'
        });
    }
    
    public static putScriptByPathRename<ThrowOnError extends boolean = false>(options: Options<PutScriptByPathRenameData, ThrowOnError>) {
        return (options?.client ?? client).put<PutScriptByPathRenameResponse, PutScriptByPathRenameError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/script/{path}/rename'
        });
    }
    
    public static postScriptFolder<ThrowOnError extends boolean = false>(options?: Options<PostScriptFolderData, ThrowOnError>) {
        return (options?.client ?? client).post<PostScriptFolderResponse, PostScriptFolderError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/script/folder'
        });
    }
    
    public static getScriptFolderByPath<ThrowOnError extends boolean = false>(options: Options<GetScriptFolderByPathData, ThrowOnError>) {
        return (options?.client ?? client).get<GetScriptFolderByPathResponse, GetScriptFolderByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/script/folder/{path}'
        });
    }
    
    public static deleteScriptFolderByPath<ThrowOnError extends boolean = false>(options: Options<DeleteScriptFolderByPathData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteScriptFolderByPathResponse, DeleteScriptFolderByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/script/folder/{path}'
        });
    }
    
    public static getTreeScriptAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeScriptAncestorsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeScriptAncestorsResponse, GetTreeScriptAncestorsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/script/ancestors'
        });
    }
    
    public static getTreeScriptChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeScriptChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeScriptChildrenResponse, GetTreeScriptChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/script/children'
        });
    }
    
    public static getTreeScriptRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeScriptRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeScriptRootResponse, GetTreeScriptRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/script/root'
        });
    }
    
}

export class SearcherService {
    public static getSearcher<ThrowOnError extends boolean = false>(options?: Options<GetSearcherData, ThrowOnError>) {
        return (options?.client ?? client).get<GetSearcherResponse, GetSearcherError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/searcher'
        });
    }
    
    public static getSearcherBySearcherNameQuery<ThrowOnError extends boolean = false>(options: Options<GetSearcherBySearcherNameQueryData, ThrowOnError>) {
        return (options?.client ?? client).get<GetSearcherBySearcherNameQueryResponse, GetSearcherBySearcherNameQueryError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/searcher/{searcherName}/query'
        });
    }
    
}

export class SecurityService {
    public static getSecurityConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetSecurityConfigurationResponse, GetSecurityConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/security/configuration'
        });
    }
    
    public static postSecurityForgotPassword<ThrowOnError extends boolean = false>(options?: Options<PostSecurityForgotPasswordData, ThrowOnError>) {
        return (options?.client ?? client).post<PostSecurityForgotPasswordResponse, PostSecurityForgotPasswordError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/security/forgot-password'
        });
    }
    
    public static postSecurityForgotPasswordReset<ThrowOnError extends boolean = false>(options?: Options<PostSecurityForgotPasswordResetData, ThrowOnError>) {
        return (options?.client ?? client).post<PostSecurityForgotPasswordResetResponse, PostSecurityForgotPasswordResetError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/security/forgot-password/reset'
        });
    }
    
    public static postSecurityForgotPasswordVerify<ThrowOnError extends boolean = false>(options?: Options<PostSecurityForgotPasswordVerifyData, ThrowOnError>) {
        return (options?.client ?? client).post<PostSecurityForgotPasswordVerifyResponse, PostSecurityForgotPasswordVerifyError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/security/forgot-password/verify'
        });
    }
    
}

export class SegmentService {
    public static getSegment<ThrowOnError extends boolean = false>(options?: Options<GetSegmentData, ThrowOnError>) {
        return (options?.client ?? client).get<GetSegmentResponse, GetSegmentError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/segment'
        });
    }
    
}

export class ServerService {
    public static getServerConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetServerConfigurationResponse, GetServerConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/server/configuration'
        });
    }
    
    public static getServerInformation<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetServerInformationResponse, GetServerInformationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/server/information'
        });
    }
    
    public static getServerStatus<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetServerStatusResponse, GetServerStatusError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/server/status'
        });
    }
    
    public static getServerTroubleshooting<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetServerTroubleshootingResponse, GetServerTroubleshootingError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/server/troubleshooting'
        });
    }
    
    public static getServerUpgradeCheck<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetServerUpgradeCheckResponse, GetServerUpgradeCheckError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/server/upgrade-check'
        });
    }
    
}

export class StaticFileService {
    public static getItemStaticFile<ThrowOnError extends boolean = false>(options?: Options<GetItemStaticFileData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemStaticFileResponse, GetItemStaticFileError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/static-file'
        });
    }
    
    public static getTreeStaticFileAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeStaticFileAncestorsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeStaticFileAncestorsResponse, GetTreeStaticFileAncestorsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/static-file/ancestors'
        });
    }
    
    public static getTreeStaticFileChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeStaticFileChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeStaticFileChildrenResponse, GetTreeStaticFileChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/static-file/children'
        });
    }
    
    public static getTreeStaticFileRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeStaticFileRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeStaticFileRootResponse, GetTreeStaticFileRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/static-file/root'
        });
    }
    
}

export class StylesheetService {
    public static getItemStylesheet<ThrowOnError extends boolean = false>(options?: Options<GetItemStylesheetData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemStylesheetResponse, GetItemStylesheetError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/stylesheet'
        });
    }
    
    public static postStylesheet<ThrowOnError extends boolean = false>(options?: Options<PostStylesheetData, ThrowOnError>) {
        return (options?.client ?? client).post<PostStylesheetResponse, PostStylesheetError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/stylesheet'
        });
    }
    
    public static getStylesheetByPath<ThrowOnError extends boolean = false>(options: Options<GetStylesheetByPathData, ThrowOnError>) {
        return (options?.client ?? client).get<GetStylesheetByPathResponse, GetStylesheetByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/stylesheet/{path}'
        });
    }
    
    public static deleteStylesheetByPath<ThrowOnError extends boolean = false>(options: Options<DeleteStylesheetByPathData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteStylesheetByPathResponse, DeleteStylesheetByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/stylesheet/{path}'
        });
    }
    
    public static putStylesheetByPath<ThrowOnError extends boolean = false>(options: Options<PutStylesheetByPathData, ThrowOnError>) {
        return (options?.client ?? client).put<PutStylesheetByPathResponse, PutStylesheetByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/stylesheet/{path}'
        });
    }
    
    public static putStylesheetByPathRename<ThrowOnError extends boolean = false>(options: Options<PutStylesheetByPathRenameData, ThrowOnError>) {
        return (options?.client ?? client).put<PutStylesheetByPathRenameResponse, PutStylesheetByPathRenameError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/stylesheet/{path}/rename'
        });
    }
    
    public static postStylesheetFolder<ThrowOnError extends boolean = false>(options?: Options<PostStylesheetFolderData, ThrowOnError>) {
        return (options?.client ?? client).post<PostStylesheetFolderResponse, PostStylesheetFolderError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/stylesheet/folder'
        });
    }
    
    public static getStylesheetFolderByPath<ThrowOnError extends boolean = false>(options: Options<GetStylesheetFolderByPathData, ThrowOnError>) {
        return (options?.client ?? client).get<GetStylesheetFolderByPathResponse, GetStylesheetFolderByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/stylesheet/folder/{path}'
        });
    }
    
    public static deleteStylesheetFolderByPath<ThrowOnError extends boolean = false>(options: Options<DeleteStylesheetFolderByPathData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteStylesheetFolderByPathResponse, DeleteStylesheetFolderByPathError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/stylesheet/folder/{path}'
        });
    }
    
    public static getTreeStylesheetAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeStylesheetAncestorsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeStylesheetAncestorsResponse, GetTreeStylesheetAncestorsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/stylesheet/ancestors'
        });
    }
    
    public static getTreeStylesheetChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeStylesheetChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeStylesheetChildrenResponse, GetTreeStylesheetChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/stylesheet/children'
        });
    }
    
    public static getTreeStylesheetRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeStylesheetRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeStylesheetRootResponse, GetTreeStylesheetRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/stylesheet/root'
        });
    }
    
}

export class TagService {
    public static getTag<ThrowOnError extends boolean = false>(options?: Options<GetTagData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTagResponse, GetTagError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tag'
        });
    }
    
}

export class TelemetryService {
    public static getTelemetry<ThrowOnError extends boolean = false>(options?: Options<GetTelemetryData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTelemetryResponse, GetTelemetryError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/telemetry'
        });
    }
    
    public static getTelemetryLevel<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetTelemetryLevelResponse, GetTelemetryLevelError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/telemetry/level'
        });
    }
    
    public static postTelemetryLevel<ThrowOnError extends boolean = false>(options?: Options<PostTelemetryLevelData, ThrowOnError>) {
        return (options?.client ?? client).post<PostTelemetryLevelResponse, PostTelemetryLevelError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/telemetry/level'
        });
    }
    
}

export class TemplateService {
    public static getItemTemplate<ThrowOnError extends boolean = false>(options?: Options<GetItemTemplateData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemTemplateResponse, GetItemTemplateError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/template'
        });
    }
    
    public static getItemTemplateSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemTemplateSearchData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemTemplateSearchResponse, GetItemTemplateSearchError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/template/search'
        });
    }
    
    public static postTemplate<ThrowOnError extends boolean = false>(options?: Options<PostTemplateData, ThrowOnError>) {
        return (options?.client ?? client).post<PostTemplateResponse, PostTemplateError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/template'
        });
    }
    
    public static getTemplateById<ThrowOnError extends boolean = false>(options: Options<GetTemplateByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTemplateByIdResponse, GetTemplateByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/template/{id}'
        });
    }
    
    public static deleteTemplateById<ThrowOnError extends boolean = false>(options: Options<DeleteTemplateByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteTemplateByIdResponse, DeleteTemplateByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/template/{id}'
        });
    }
    
    public static putTemplateById<ThrowOnError extends boolean = false>(options: Options<PutTemplateByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutTemplateByIdResponse, PutTemplateByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/template/{id}'
        });
    }
    
    public static getTemplateConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetTemplateConfigurationResponse, GetTemplateConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/template/configuration'
        });
    }
    
    public static postTemplateQueryExecute<ThrowOnError extends boolean = false>(options?: Options<PostTemplateQueryExecuteData, ThrowOnError>) {
        return (options?.client ?? client).post<PostTemplateQueryExecuteResponse, PostTemplateQueryExecuteError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/template/query/execute'
        });
    }
    
    public static getTemplateQuerySettings<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetTemplateQuerySettingsResponse, GetTemplateQuerySettingsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/template/query/settings'
        });
    }
    
    public static getTreeTemplateAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeTemplateAncestorsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeTemplateAncestorsResponse, GetTreeTemplateAncestorsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/template/ancestors'
        });
    }
    
    public static getTreeTemplateChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeTemplateChildrenData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeTemplateChildrenResponse, GetTreeTemplateChildrenError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/template/children'
        });
    }
    
    public static getTreeTemplateRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeTemplateRootData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTreeTemplateRootResponse, GetTreeTemplateRootError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/tree/template/root'
        });
    }
    
}

export class TemporaryFileService {
    public static postTemporaryFile<ThrowOnError extends boolean = false>(options?: Options<PostTemporaryFileData, ThrowOnError>) {
        return (options?.client ?? client).post<PostTemporaryFileResponse, PostTemporaryFileError, ThrowOnError>({
            ...options,
            ...formDataBodySerializer,
            headers: {
                'Content-Type': null,
                ...options?.headers
            },
            url: '/umbraco/management/api/v1/temporary-file'
        });
    }
    
    public static getTemporaryFileById<ThrowOnError extends boolean = false>(options: Options<GetTemporaryFileByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTemporaryFileByIdResponse, GetTemporaryFileByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/temporary-file/{id}'
        });
    }
    
    public static deleteTemporaryFileById<ThrowOnError extends boolean = false>(options: Options<DeleteTemporaryFileByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteTemporaryFileByIdResponse, DeleteTemporaryFileByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/temporary-file/{id}'
        });
    }
    
    public static getTemporaryFileConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetTemporaryFileConfigurationResponse, GetTemporaryFileConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/temporary-file/configuration'
        });
    }
    
}

export class UpgradeService {
    public static postUpgradeAuthorize<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<PostUpgradeAuthorizeResponse, PostUpgradeAuthorizeError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/upgrade/authorize'
        });
    }
    
    public static getUpgradeSettings<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetUpgradeSettingsResponse, GetUpgradeSettingsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/upgrade/settings'
        });
    }
    
}

export class UserDataService {
    public static postUserData<ThrowOnError extends boolean = false>(options?: Options<PostUserDataData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserDataResponse, PostUserDataError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user-data'
        });
    }
    
    public static getUserData<ThrowOnError extends boolean = false>(options?: Options<GetUserDataData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserDataResponse, GetUserDataError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user-data'
        });
    }
    
    public static putUserData<ThrowOnError extends boolean = false>(options?: Options<PutUserDataData, ThrowOnError>) {
        return (options?.client ?? client).put<PutUserDataResponse, PutUserDataError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user-data'
        });
    }
    
    public static getUserDataById<ThrowOnError extends boolean = false>(options: Options<GetUserDataByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserDataByIdResponse, GetUserDataByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user-data/{id}'
        });
    }
    
}

export class UserGroupService {
    public static getFilterUserGroup<ThrowOnError extends boolean = false>(options?: Options<GetFilterUserGroupData, ThrowOnError>) {
        return (options?.client ?? client).get<GetFilterUserGroupResponse, GetFilterUserGroupError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/filter/user-group'
        });
    }
    
    public static getItemUserGroup<ThrowOnError extends boolean = false>(options?: Options<GetItemUserGroupData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemUserGroupResponse, GetItemUserGroupError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/user-group'
        });
    }
    
    public static deleteUserGroup<ThrowOnError extends boolean = false>(options?: Options<DeleteUserGroupData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteUserGroupResponse, DeleteUserGroupError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user-group'
        });
    }
    
    public static postUserGroup<ThrowOnError extends boolean = false>(options?: Options<PostUserGroupData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserGroupResponse, PostUserGroupError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user-group'
        });
    }
    
    public static getUserGroup<ThrowOnError extends boolean = false>(options?: Options<GetUserGroupData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserGroupResponse, GetUserGroupError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user-group'
        });
    }
    
    public static getUserGroupById<ThrowOnError extends boolean = false>(options: Options<GetUserGroupByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserGroupByIdResponse, GetUserGroupByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user-group/{id}'
        });
    }
    
    public static deleteUserGroupById<ThrowOnError extends boolean = false>(options: Options<DeleteUserGroupByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteUserGroupByIdResponse, DeleteUserGroupByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user-group/{id}'
        });
    }
    
    public static putUserGroupById<ThrowOnError extends boolean = false>(options: Options<PutUserGroupByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutUserGroupByIdResponse, PutUserGroupByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user-group/{id}'
        });
    }
    
    public static deleteUserGroupByIdUsers<ThrowOnError extends boolean = false>(options: Options<DeleteUserGroupByIdUsersData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteUserGroupByIdUsersResponse, DeleteUserGroupByIdUsersError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user-group/{id}/users'
        });
    }
    
    public static postUserGroupByIdUsers<ThrowOnError extends boolean = false>(options: Options<PostUserGroupByIdUsersData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserGroupByIdUsersResponse, PostUserGroupByIdUsersError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user-group/{id}/users'
        });
    }
    
}

export class UserService {
    public static getFilterUser<ThrowOnError extends boolean = false>(options?: Options<GetFilterUserData, ThrowOnError>) {
        return (options?.client ?? client).get<GetFilterUserResponse, GetFilterUserError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/filter/user'
        });
    }
    
    public static getItemUser<ThrowOnError extends boolean = false>(options?: Options<GetItemUserData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemUserResponse, GetItemUserError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/user'
        });
    }
    
    public static postUser<ThrowOnError extends boolean = false>(options?: Options<PostUserData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserResponse, PostUserError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user'
        });
    }
    
    public static deleteUser<ThrowOnError extends boolean = false>(options?: Options<DeleteUserData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteUserResponse, DeleteUserError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user'
        });
    }
    
    public static getUser<ThrowOnError extends boolean = false>(options?: Options<GetUserData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserResponse, GetUserError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user'
        });
    }
    
    public static getUserById<ThrowOnError extends boolean = false>(options: Options<GetUserByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserByIdResponse, GetUserByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/{id}'
        });
    }
    
    public static deleteUserById<ThrowOnError extends boolean = false>(options: Options<DeleteUserByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteUserByIdResponse, DeleteUserByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/{id}'
        });
    }
    
    public static putUserById<ThrowOnError extends boolean = false>(options: Options<PutUserByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutUserByIdResponse, PutUserByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/{id}'
        });
    }
    
    public static getUserById2Fa<ThrowOnError extends boolean = false>(options: Options<GetUserById2FaData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserById2FaResponse, GetUserById2FaError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/{id}/2fa'
        });
    }
    
    public static deleteUserById2FaByProviderName<ThrowOnError extends boolean = false>(options: Options<DeleteUserById2FaByProviderNameData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteUserById2FaByProviderNameResponse, DeleteUserById2FaByProviderNameError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/{id}/2fa/{providerName}'
        });
    }
    
    public static getUserByIdCalculateStartNodes<ThrowOnError extends boolean = false>(options: Options<GetUserByIdCalculateStartNodesData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserByIdCalculateStartNodesResponse, GetUserByIdCalculateStartNodesError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/{id}/calculate-start-nodes'
        });
    }
    
    public static postUserByIdChangePassword<ThrowOnError extends boolean = false>(options: Options<PostUserByIdChangePasswordData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserByIdChangePasswordResponse, PostUserByIdChangePasswordError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/{id}/change-password'
        });
    }
    
    public static postUserByIdClientCredentials<ThrowOnError extends boolean = false>(options: Options<PostUserByIdClientCredentialsData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserByIdClientCredentialsResponse, PostUserByIdClientCredentialsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/{id}/client-credentials'
        });
    }
    
    public static getUserByIdClientCredentials<ThrowOnError extends boolean = false>(options: Options<GetUserByIdClientCredentialsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserByIdClientCredentialsResponse, GetUserByIdClientCredentialsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/{id}/client-credentials'
        });
    }
    
    public static deleteUserByIdClientCredentialsByClientId<ThrowOnError extends boolean = false>(options: Options<DeleteUserByIdClientCredentialsByClientIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteUserByIdClientCredentialsByClientIdResponse, DeleteUserByIdClientCredentialsByClientIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/{id}/client-credentials/{clientId}'
        });
    }
    
    public static postUserByIdResetPassword<ThrowOnError extends boolean = false>(options: Options<PostUserByIdResetPasswordData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserByIdResetPasswordResponse, PostUserByIdResetPasswordError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/{id}/reset-password'
        });
    }
    
    public static deleteUserAvatarById<ThrowOnError extends boolean = false>(options: Options<DeleteUserAvatarByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteUserAvatarByIdResponse, DeleteUserAvatarByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/avatar/{id}'
        });
    }
    
    public static postUserAvatarById<ThrowOnError extends boolean = false>(options: Options<PostUserAvatarByIdData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserAvatarByIdResponse, PostUserAvatarByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/avatar/{id}'
        });
    }
    
    public static getUserConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserConfigurationResponse, GetUserConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/configuration'
        });
    }
    
    public static getUserCurrent<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserCurrentResponse, GetUserCurrentError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/current'
        });
    }
    
    public static getUserCurrent2Fa<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserCurrent2FaResponse, GetUserCurrent2FaError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/current/2fa'
        });
    }
    
    public static deleteUserCurrent2FaByProviderName<ThrowOnError extends boolean = false>(options: Options<DeleteUserCurrent2FaByProviderNameData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteUserCurrent2FaByProviderNameResponse, DeleteUserCurrent2FaByProviderNameError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/current/2fa/{providerName}'
        });
    }
    
    public static postUserCurrent2FaByProviderName<ThrowOnError extends boolean = false>(options: Options<PostUserCurrent2FaByProviderNameData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserCurrent2FaByProviderNameResponse, PostUserCurrent2FaByProviderNameError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/current/2fa/{providerName}'
        });
    }
    
    public static getUserCurrent2FaByProviderName<ThrowOnError extends boolean = false>(options: Options<GetUserCurrent2FaByProviderNameData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserCurrent2FaByProviderNameResponse, GetUserCurrent2FaByProviderNameError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/current/2fa/{providerName}'
        });
    }
    
    public static postUserCurrentAvatar<ThrowOnError extends boolean = false>(options?: Options<PostUserCurrentAvatarData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserCurrentAvatarResponse, PostUserCurrentAvatarError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/current/avatar'
        });
    }
    
    public static postUserCurrentChangePassword<ThrowOnError extends boolean = false>(options?: Options<PostUserCurrentChangePasswordData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserCurrentChangePasswordResponse, PostUserCurrentChangePasswordError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/current/change-password'
        });
    }
    
    public static getUserCurrentConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserCurrentConfigurationResponse, GetUserCurrentConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/current/configuration'
        });
    }
    
    public static getUserCurrentLoginProviders<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserCurrentLoginProvidersResponse, GetUserCurrentLoginProvidersError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/current/login-providers'
        });
    }
    
    public static getUserCurrentPermissions<ThrowOnError extends boolean = false>(options?: Options<GetUserCurrentPermissionsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserCurrentPermissionsResponse, GetUserCurrentPermissionsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/current/permissions'
        });
    }
    
    public static getUserCurrentPermissionsDocument<ThrowOnError extends boolean = false>(options?: Options<GetUserCurrentPermissionsDocumentData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserCurrentPermissionsDocumentResponse, GetUserCurrentPermissionsDocumentError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/current/permissions/document'
        });
    }
    
    public static getUserCurrentPermissionsMedia<ThrowOnError extends boolean = false>(options?: Options<GetUserCurrentPermissionsMediaData, ThrowOnError>) {
        return (options?.client ?? client).get<GetUserCurrentPermissionsMediaResponse, GetUserCurrentPermissionsMediaError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/current/permissions/media'
        });
    }
    
    public static postUserDisable<ThrowOnError extends boolean = false>(options?: Options<PostUserDisableData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserDisableResponse, PostUserDisableError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/disable'
        });
    }
    
    public static postUserEnable<ThrowOnError extends boolean = false>(options?: Options<PostUserEnableData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserEnableResponse, PostUserEnableError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/enable'
        });
    }
    
    public static postUserInvite<ThrowOnError extends boolean = false>(options?: Options<PostUserInviteData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserInviteResponse, PostUserInviteError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/invite'
        });
    }
    
    public static postUserInviteCreatePassword<ThrowOnError extends boolean = false>(options?: Options<PostUserInviteCreatePasswordData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserInviteCreatePasswordResponse, PostUserInviteCreatePasswordError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/invite/create-password'
        });
    }
    
    public static postUserInviteResend<ThrowOnError extends boolean = false>(options?: Options<PostUserInviteResendData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserInviteResendResponse, PostUserInviteResendError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/invite/resend'
        });
    }
    
    public static postUserInviteVerify<ThrowOnError extends boolean = false>(options?: Options<PostUserInviteVerifyData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserInviteVerifyResponse, PostUserInviteVerifyError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/invite/verify'
        });
    }
    
    public static postUserSetUserGroups<ThrowOnError extends boolean = false>(options?: Options<PostUserSetUserGroupsData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserSetUserGroupsResponse, PostUserSetUserGroupsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/set-user-groups'
        });
    }
    
    public static postUserUnlock<ThrowOnError extends boolean = false>(options?: Options<PostUserUnlockData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUserUnlockResponse, PostUserUnlockError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/user/unlock'
        });
    }
    
}

export class WebhookService {
    public static getItemWebhook<ThrowOnError extends boolean = false>(options?: Options<GetItemWebhookData, ThrowOnError>) {
        return (options?.client ?? client).get<GetItemWebhookResponse, GetItemWebhookError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/item/webhook'
        });
    }
    
    public static getWebhook<ThrowOnError extends boolean = false>(options?: Options<GetWebhookData, ThrowOnError>) {
        return (options?.client ?? client).get<GetWebhookResponse, GetWebhookError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/webhook'
        });
    }
    
    public static postWebhook<ThrowOnError extends boolean = false>(options?: Options<PostWebhookData, ThrowOnError>) {
        return (options?.client ?? client).post<PostWebhookResponse, PostWebhookError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/webhook'
        });
    }
    
    public static getWebhookById<ThrowOnError extends boolean = false>(options: Options<GetWebhookByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetWebhookByIdResponse, GetWebhookByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/webhook/{id}'
        });
    }
    
    public static deleteWebhookById<ThrowOnError extends boolean = false>(options: Options<DeleteWebhookByIdData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteWebhookByIdResponse, DeleteWebhookByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/webhook/{id}'
        });
    }
    
    public static putWebhookById<ThrowOnError extends boolean = false>(options: Options<PutWebhookByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<PutWebhookByIdResponse, PutWebhookByIdError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/webhook/{id}'
        });
    }
    
    public static getWebhookEvents<ThrowOnError extends boolean = false>(options?: Options<GetWebhookEventsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetWebhookEventsResponse, GetWebhookEventsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/webhook/events'
        });
    }
    
    public static getWebhookLogs<ThrowOnError extends boolean = false>(options?: Options<GetWebhookLogsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetWebhookLogsResponse, GetWebhookLogsError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/webhook/logs'
        });
    }
    
}